"use strict";(self.webpackChunkibmshelper=self.webpackChunkibmshelper||[]).push([[516],{350:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>c,data:()=>l});var p=a(641);const t=[(0,p.Fv)('<h1 id="业务工具类" tabindex="-1"><a class="header-anchor" href="#业务工具类"><span>业务工具类</span></a></h1><h2 id="_1-目录说明" tabindex="-1"><a class="header-anchor" href="#_1-目录说明"><span>1 目录说明</span></a></h2><h3 id="_1-1-业务相关工具类" tabindex="-1"><a class="header-anchor" href="#_1-1-业务相关工具类"><span>1.1 业务相关工具类</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">项目core模块src/main/java/com/ibms下</span>\n<span class="line">├─ util</span>\n<span class="line">│  ├─ controller</span>\n<span class="line">│  │  └─ MyUtilController.java</span>\n<span class="line">│  ├─ manager</span>\n<span class="line">│  │  ├─ impl</span>\n<span class="line">│  │  │  └─ MyUtilManagerImpl.java</span>\n<span class="line">│  │  └─ MyUtilManager.java</span>\n<span class="line">│  ├─ taskTool</span>\n<span class="line">│  │  ├─ IMyTask.java</span>\n<span class="line">│  │  ├─ MyTaskProxy.java</span>\n<span class="line">│  │  └─ MyTaskQueue.java</span>\n<span class="line">│  ├─ AsposeWordUtil.java</span>\n<span class="line">│  ├─ CommonTools.java</span>\n<span class="line">│  ├─ HDFSFileUtil.java</span>\n<span class="line">│  ├─ MyConst.java</span>\n<span class="line">│  ├─ MyExcelUtil.java</span>\n<span class="line">│  ├─ MyFileUtil.java</span>\n<span class="line">│  ├─ MyHttpUtil.java</span>\n<span class="line">│  ├─ MyJdbcUtil.java</span>\n<span class="line">│  ├─ MyListUtil.java</span>\n<span class="line">│  ├─ MyMapUtil.java</span>\n<span class="line">│  ├─ MyNumUtil.java</span>\n<span class="line">│  ├─ MyPdfUtil.java</span>\n<span class="line">│  ├─ MyScriptUtil.java</span>\n<span class="line">│  ├─ MySetUtil.java</span>\n<span class="line">│  ├─ MyStringUtil.java</span>\n<span class="line">│  └─ MyWordUtil.java</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-平台接口调用封装" tabindex="-1"><a class="header-anchor" href="#_1-2-平台接口调用封装"><span>1.2 平台接口调用封装</span></a></h3><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">项目spi模块src/main/java/com/ibms下</span>\n<span class="line">├─ service</span>\n<span class="line">│  ├─ impl</span>\n<span class="line">│  │  ├─ PurchaseBpmnService.java</span>\n<span class="line">│  │  ├─ PurchaseFileService.java</span>\n<span class="line">│  │  └─ PurchaseSysService.java</span>\n<span class="line">│  ├─ IPurchaseBpmnService.java</span>\n<span class="line">│  ├─ IPurchaseFileService.java</span>\n<span class="line">│  └─ IPurchaseSysService.java</span>\n<span class="line">├─ spring</span>\n<span class="line">│  └─ PurchasesSpiAutoConfiguration.java</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-下载地址" tabindex="-1"><a class="header-anchor" href="#_1-3-下载地址"><span>1.3 下载地址</span></a></h3><p><a href="https://raw.githubusercontent.com/justxzm/CodeHelper/master/assets/codeFile.7z" target="_blank" rel="noopener noreferrer">codeFile.7z</a></p><h2 id="_2-live-templates" tabindex="-1"><a class="header-anchor" href="#_2-live-templates"><span>2 Live Templates</span></a></h2><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">//datalist，常用集合</span></span>\n<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> dataList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//datamap，常用集合</span></span>\n<span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> dataMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//desc，注释</span></span>\n<span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> *  <span class="token keyword">@desc</span> : </span>\n<span class="line"> *  <span class="token keyword">@author</span> : Just.</span>\n<span class="line"> *  <span class="token keyword">@createDate</span> : $date$ $time$ </span>\n<span class="line"> */</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//getlsh，流水号</span></span>\n<span class="line"><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> sqdhArr <span class="token operator">=</span> formIdentityService<span class="token punctuation">.</span><span class="token function">getNextIdByAlias</span><span class="token punctuation">(</span><span class="token string">&quot;wzwlcg_bhgpcldh&quot;</span><span class="token punctuation">,</span> <span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">getClientNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> sqdh <span class="token operator">=</span> sqdhArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot;-&quot;</span><span class="token operator">+</span> <span class="token class-name">UserContextUtil</span><span class="token punctuation">.</span><span class="token function">getCurrentUserOrgCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;-&quot;</span><span class="token operator">+</span>sqdhArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">&quot;-&quot;</span><span class="token operator">+</span>sqdhArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//jdbcbatch，切换数据源</span></span>\n<span class="line"><span class="token class-name">JdbcTemplate</span> jdbcTemplate <span class="token operator">=</span> <span class="token class-name">DataSourceUtil</span><span class="token punctuation">.</span><span class="token function">getJdbcTempByDsAlias</span><span class="token punctuation">(</span><span class="token class-name">MyConst</span><span class="token punctuation">.</span>contractDataSourceAlias<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">MyJdbcUtil</span><span class="token punctuation">.</span><span class="token function">batchUpdate</span><span class="token punctuation">(</span>jdbcTemplate<span class="token punctuation">,</span>updateSqls<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//postevent，后置脚本</span></span>\n<span class="line"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;流程后置事件&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">&quot;flowPostEvent&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@ResourceMethod</span><span class="token punctuation">(</span>methodName <span class="token operator">=</span> <span class="token string">&quot;流程后置事件&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">xxPostEvent</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">JSONObject</span> params<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;nodeType&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> nodeType<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">String</span> actionType <span class="token operator">=</span> <span class="token class-name">MyScriptUtil</span><span class="token punctuation">.</span><span class="token function">getActionType</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>nodeType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>actionType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;endProcess&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> </span>\n<span class="line">            <span class="token punctuation">(</span>nodeType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">)</span><span class="token operator">&amp;&amp;</span>actionType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;other&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span></span>\n<span class="line">            <span class="token punctuation">(</span><span class="token operator">!</span>actionType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;approve&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>actionType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;startFlow&quot;</span><span class="token punctuation">)</span></span>\n<span class="line">            <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>actionType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;endProcess&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span>actionType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;other&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//其他事件不触发</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>actionType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;endProcess&quot;</span><span class="token punctuation">)</span> <span class="token operator">||</span> actionType<span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;other&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        nodeType <span class="token operator">=</span> <span class="token string">&quot;stop&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token class-name">String</span> businessKey <span class="token operator">=</span> <span class="token class-name">MyScriptUtil</span><span class="token punctuation">.</span><span class="token function">getBusinessKey</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>manager<span class="token punctuation">.</span><span class="token function">flowPostEvent</span><span class="token punctuation">(</span>businessKey<span class="token punctuation">,</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//posteventInt，后置脚本接口</span></span>\n<span class="line"><span class="token comment">//流程后置事件</span></span>\n<span class="line"><span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">flowPostEvent</span><span class="token punctuation">(</span><span class="token class-name">String</span> businessKey<span class="token punctuation">,</span><span class="token class-name">String</span> nodeType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//posteventImp，后置脚本实现</span></span>\n<span class="line"><span class="token annotation punctuation">@Override</span><span class="token comment">//流程后置事件</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">flowPostEvent</span><span class="token punctuation">(</span><span class="token class-name">String</span> businessKey<span class="token punctuation">,</span> <span class="token class-name">String</span> nodeType<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;start&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;end&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;stop&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>nodeType<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//querydatalist，sql查询dataList</span></span>\n<span class="line"><span class="token class-name">String</span> querySql <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> dataList <span class="token operator">=</span> jdbcDao<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span>querySql<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CommonTools</span><span class="token punctuation">.</span><span class="token function">isNotEmptyList</span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> dataMap <span class="token operator">:</span> dataList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//querydatamap，sql查询dataMap</span></span>\n<span class="line"><span class="token class-name">String</span> querySql <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> dataMap <span class="token operator">=</span> jdbcDao<span class="token punctuation">.</span><span class="token function">queryForMap</span><span class="token punctuation">(</span>querySql<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>dataMap<span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//returnfailure，返回失败</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>checkMsg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">failure</span><span class="token punctuation">(</span>checkMsg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//returnsuccess，返回成功</span></span>\n<span class="line"><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//throwruntime，后置脚本异常测试</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>businessKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-1-下载地址" tabindex="-1"><a class="header-anchor" href="#_2-1-下载地址"><span>2.1 下载地址</span></a></h3><p><a href="https://raw.githubusercontent.com/justxzm/CodeHelper/master/assets/settings.jar" target="_blank" rel="noopener noreferrer">settings.jar</a></p>',12)],e={},c=(0,a(262).A)(e,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,t)}]]),l=JSON.parse('{"path":"/%E4%B8%9A%E5%8A%A1%E5%B7%A5%E5%85%B7%E7%B1%BB.html","title":"业务工具类","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1 目录说明","slug":"_1-目录说明","link":"#_1-目录说明","children":[{"level":3,"title":"1.1 业务相关工具类","slug":"_1-1-业务相关工具类","link":"#_1-1-业务相关工具类","children":[]},{"level":3,"title":"1.2 平台接口调用封装","slug":"_1-2-平台接口调用封装","link":"#_1-2-平台接口调用封装","children":[]},{"level":3,"title":"1.3 下载地址","slug":"_1-3-下载地址","link":"#_1-3-下载地址","children":[]}]},{"level":2,"title":"2 Live Templates","slug":"_2-live-templates","link":"#_2-live-templates","children":[{"level":3,"title":"2.1 下载地址","slug":"_2-1-下载地址","link":"#_2-1-下载地址","children":[]}]}],"git":{},"filePathRelative":"业务工具类.md"}')}}]);