"use strict";(self.webpackChunkibmshelper=self.webpackChunkibmshelper||[]).push([[167],{176:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>o,data:()=>c});var p=a(641);const t=[(0,p.Fv)('<h1 id="前后端代码段" tabindex="-1"><a class="header-anchor" href="#前后端代码段"><span>前后端代码段</span></a></h1><h2 id="_1-前端" tabindex="-1"><a class="header-anchor" href="#_1-前端"><span>1 前端</span></a></h2><h3 id="_1-1-表单定制相关" tabindex="-1"><a class="header-anchor" href="#_1-1-表单定制相关"><span>1.1 表单定制相关</span></a></h3><h4 id="【初始化表单数据】" tabindex="-1"><a class="header-anchor" href="#【初始化表单数据】"><span>【初始化表单数据】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">const</span> <span class="token function-variable function">initFormData</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">initData</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>initData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> initData<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token keyword">in</span> data<span class="token punctuation">.</span>rwxx<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                data<span class="token punctuation">.</span>rwxx<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> initData<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token function">initFormData</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">pid</span><span class="token operator">:</span> pid<span class="token punctuation">,</span>        <span class="token comment">// 父节点ID</span></span>\n<span class="line">    <span class="token literal-property property">ssb</span><span class="token operator">:</span> <span class="token string">&quot;W_xmb&quot;</span><span class="token punctuation">,</span>    <span class="token comment">// 所属表</span></span>\n<span class="line">    <span class="token literal-property property">ssbid</span><span class="token operator">:</span> xmid<span class="token punctuation">,</span>     <span class="token comment">// 所属表ID</span></span>\n<span class="line">    <span class="token literal-property property">ssxmid</span><span class="token operator">:</span> xmid<span class="token punctuation">,</span>    <span class="token comment">// 所属项目ID</span></span>\n<span class="line">    <span class="token literal-property property">rwlx</span><span class="token operator">:</span> <span class="token string">&quot;框架任务&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 任务类型</span></span>\n<span class="line">    <span class="token literal-property property">rwbs</span><span class="token operator">:</span> <span class="token string">&quot;xmrw&quot;</span><span class="token punctuation">,</span>    <span class="token comment">// 任务标识</span></span>\n<span class="line">    <span class="token literal-property property">rwzt</span><span class="token operator">:</span> <span class="token string">&quot;编制中&quot;</span><span class="token punctuation">,</span>   <span class="token comment">// 任务状态</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【表单流程节点判断】" tabindex="-1"><a class="header-anchor" href="#【表单流程节点判断】"><span>【表单流程节点判断】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>_this<span class="token punctuation">.</span>_props<span class="token punctuation">.</span>action <span class="token operator">==</span> <span class="token string">&#39;add&#39;</span> <span class="token operator">||</span> _this<span class="token punctuation">.</span>_props<span class="token punctuation">.</span>action <span class="token operator">==</span> <span class="token string">&#39;flow-add&#39;</span></span>\n<span class="line">   <span class="token operator">||</span> <span class="token punctuation">(</span>_this<span class="token punctuation">.</span>_props<span class="token punctuation">.</span>action <span class="token operator">==</span> <span class="token string">&#39;flow-edit&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>_this<span class="token punctuation">.</span>nodeId<span class="token operator">==</span><span class="token string">&quot;StartEvent_14inlgb&quot;</span><span class="token operator">||</span>_this<span class="token punctuation">.</span>nodeId<span class="token operator">==</span><span class="token string">&quot;UserTask_5u4JdYm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">//新增、发起节点</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>_this<span class="token punctuation">.</span>_props<span class="token punctuation">.</span>action <span class="token operator">==</span> <span class="token string">&#39;flow-edit&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>_this<span class="token punctuation">.</span>nodeId<span class="token operator">==</span><span class="token string">&quot;UserTask_0ou7rdg&quot;</span> <span class="token operator">||</span> _this<span class="token punctuation">.</span>nodeId<span class="token operator">==</span><span class="token string">&quot;UserTask_09ndxif&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">//审批节点</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>_this<span class="token punctuation">.</span>_props<span class="token punctuation">.</span>action<span class="token operator">==</span><span class="token string">&#39;inst&#39;</span> <span class="token operator">||</span> _this<span class="token punctuation">.</span>_props<span class="token punctuation">.</span>action <span class="token operator">==</span> <span class="token string">&#39;detail&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">//已办明细页、明细页</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">//其他</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【监听事件】" tabindex="-1"><a class="header-anchor" href="#【监听事件】"><span>【监听事件】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">//申请单号初始化</span></span>\n<span class="line">_this<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span></span>\n<span class="line">    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data<span class="token punctuation">.</span>ckczsqb<span class="token punctuation">.</span>sqdh<span class="token punctuation">,</span></span>\n<span class="line">    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span>oldVal</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>newVal<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">let</span> sqdhArr <span class="token operator">=</span> newVal<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;-&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">          <span class="token keyword">if</span><span class="token punctuation">(</span>sqdhArr<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">let</span> curOrgCode <span class="token operator">=</span> localStorage<span class="token punctuation">.</span>orgCode<span class="token punctuation">;</span></span>\n<span class="line">            data<span class="token punctuation">.</span>ckczsqb<span class="token punctuation">.</span>sqdh <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sqdhArr<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>curOrgCode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sqdhArr<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sqdhArr<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line">          <span class="token punctuation">}</span>    </span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"><span class="token comment">//监听</span></span>\n<span class="line">_this<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span></span>\n<span class="line">    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>sub_xmmjbgnrzb<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>F_bmqxbgh<span class="token punctuation">,</span></span>\n<span class="line">    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span>oldVal</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span>_this<span class="token punctuation">.</span>action<span class="token operator">==</span><span class="token string">&#39;inst&#39;</span> <span class="token operator">||</span> _this<span class="token punctuation">.</span>action<span class="token operator">==</span><span class="token string">&#39;detail&#39;</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>_this<span class="token punctuation">.</span>nodeId<span class="token operator">!=</span><span class="token string">&#39;StartEvent_qct2MKR&#39;</span> <span class="token operator">&amp;&amp;</span> _this<span class="token punctuation">.</span>nodeId<span class="token operator">!=</span><span class="token string">&#39;UserTask_qct2MKR&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">      <span class="token keyword">if</span><span class="token punctuation">(</span>newVal <span class="token operator">!=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>xbmqx <span class="token operator">=</span> newVal</span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span> <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line">_this<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span></span>\n<span class="line">    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data<span class="token punctuation">.</span>wzwlcgsqb<span class="token punctuation">.</span>sub_wzwlcgqdb<span class="token punctuation">,</span></span>\n<span class="line">    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span>oldVal</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        data<span class="token punctuation">.</span>wzwlcgsqb<span class="token punctuation">.</span>cghj <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//采购合计</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>newVal <span class="token operator">&amp;&amp;</span> newVal<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">          newVal<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            item<span class="token punctuation">.</span>yjjexj <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>cgsl<span class="token punctuation">)</span><span class="token operator">*</span><span class="token function">parseFloat</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>yjdj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//预计金额小计=采购数量*预计单价</span></span>\n<span class="line">            data<span class="token punctuation">.</span>wzwlcgsqb<span class="token punctuation">.</span>cghj <span class="token operator">+=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>yjjexj<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">          <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">          data<span class="token punctuation">.</span>wzwlcgsqb<span class="token punctuation">.</span>cghj <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>wzwlcgsqb<span class="token punctuation">.</span>cghj<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【保存校验】" tabindex="-1"><a class="header-anchor" href="#【保存校验】"><span>【保存校验】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_this<span class="token punctuation">.</span><span class="token function-variable function">validatorScript</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token comment">//密级必填校验</span></span>\n<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>wzwlrkb<span class="token punctuation">.</span>mj<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        res <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line">        _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&#39;密级必填&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token comment">//库存物资必选校验</span></span>\n<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>kcfysqb<span class="token punctuation">.</span>sub_kcfyqdb<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        res <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>_this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&#39;请选择物资信息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token comment">//报损数量最大值校验</span></span>\n<span class="line">    data<span class="token punctuation">.</span>kcbssqb<span class="token punctuation">.</span>sub_kcbsqdb<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>bssl<span class="token operator">&gt;</span>item<span class="token punctuation">.</span>kcsl<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            res <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span>_this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">物资【</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>wzbm<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">】报损数量不得大于</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>kcsl<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> res<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// 校验函数，固定写法</span></span>\n<span class="line">_this<span class="token punctuation">.</span><span class="token function-variable function">validatorScript</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;校验失败：&#39;</span><span class="token operator">+</span>data<span class="token punctuation">.</span>test20211231<span class="token punctuation">.</span>mc<span class="token punctuation">)</span></span>\n<span class="line">    <span class="token comment">// 返回 false 终止操作，返回 true 继续执行</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">// 如果涉及接口请求，请使用 async/await 搭配，不能使用 .then() 形式处理</span></span>\n<span class="line">_this<span class="token punctuation">.</span><span class="token function-variable function">validatorScript</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">await</span> _req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;//&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;校验失败&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token comment">// 返回 false 终止操作，返回 true 继续执行</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【表单字段权限】" tabindex="-1"><a class="header-anchor" href="#【表单字段权限】"><span>【表单字段权限】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>table<span class="token punctuation">.</span>kyktxmxxbgnrzb<span class="token punctuation">.</span>required <span class="token operator">=</span> <span class="token boolean">false</span></span>\n<span class="line"><span class="token keyword">if</span> <span class="token punctuation">(</span>_this<span class="token punctuation">.</span>_props<span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>bglx <span class="token operator">===</span> <span class="token string">&#39;项目信息变更&#39;</span> <span class="token operator">||</span> data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>bglx <span class="token operator">===</span> <span class="token string">&#39;项目信息变更&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>fields<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>msh <span class="token operator">=</span> <span class="token string">&#39;n&#39;</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>fields<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>xmmc <span class="token operator">=</span> <span class="token string">&#39;n&#39;</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>fields<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>xmzgbm <span class="token operator">=</span> <span class="token string">&#39;n&#39;</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>fields<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>xmcdbm <span class="token operator">=</span> <span class="token string">&#39;n&#39;</span></span>\n<span class="line">    _this<span class="token punctuation">.</span><span class="token function">$set</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">,</span> <span class="token string">&#39;bglx&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;项目信息变更&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>fields<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>bglx <span class="token operator">=</span> <span class="token string">&#39;r&#39;</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>table<span class="token punctuation">.</span>xmmjbgnrzb<span class="token punctuation">.</span>required <span class="token operator">=</span> <span class="token boolean">false</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>table<span class="token punctuation">.</span>xmmjbgnrzb<span class="token punctuation">.</span>hidden <span class="token operator">=</span> <span class="token boolean">true</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>table<span class="token punctuation">.</span>xmjhbgnrzb<span class="token punctuation">.</span>hidden <span class="token operator">=</span> <span class="token boolean">true</span></span>\n<span class="line">    data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>glb <span class="token operator">=</span> <span class="token string">&#39;w_xhyzxmxxbgnrb&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">_this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>table<span class="token punctuation">.</span>xmjhbgnrzb<span class="token punctuation">.</span>del <span class="token operator">=</span> <span class="token boolean">false</span></span>\n<span class="line">_this<span class="token punctuation">.</span>permission<span class="token punctuation">.</span>table<span class="token punctuation">.</span>xmjhbgnrzb<span class="token punctuation">.</span>add <span class="token operator">=</span> <span class="token boolean">false</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【数据视图拿主表数据】" tabindex="-1"><a class="header-anchor" href="#【数据视图拿主表数据】"><span>【数据视图拿主表数据】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> onlineFormObj <span class="token operator">=</span> _utils<span class="token punctuation">.</span><span class="token function">getOnlineFormInstance</span><span class="token punctuation">(</span>_this<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> formData <span class="token operator">=</span> _utils<span class="token punctuation">.</span><span class="token function">getOnlineFormInstance</span><span class="token punctuation">(</span>_this<span class="token punctuation">)</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span></span>\n<span class="line"># 子表数据视图获取主表数据</span>\n<span class="line">_this<span class="token punctuation">.</span>$parent<span class="token punctuation">.</span>onlineFormInst<span class="token punctuation">.</span>data</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【修改数据视图排序】" tabindex="-1"><a class="header-anchor" href="#【修改数据视图排序】"><span>【修改数据视图排序】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">//通用附件传参</span></span>\n<span class="line">data<span class="token punctuation">.</span>mjDes <span class="token operator">=</span> <span class="token string">&quot;公文密级&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">data<span class="token punctuation">.</span>mj <span class="token operator">=</span> data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>mj<span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">//通用附件_数据监听_实现新增编辑排序</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">sortSubData</span><span class="token punctuation">(</span><span class="token parameter">arr</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>arr <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> arr<span class="token punctuation">.</span>length<span class="token operator">&lt;=</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">      <span class="token keyword">let</span> tmp <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> arr<span class="token punctuation">.</span>length <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">              <span class="token keyword">let</span> val01 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">              <span class="token keyword">let</span> val02 <span class="token operator">=</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>px<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">              val01 <span class="token operator">=</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>val01<span class="token punctuation">)</span><span class="token operator">?</span> <span class="token number">0</span><span class="token operator">:</span>val01<span class="token punctuation">;</span></span>\n<span class="line">              val02 <span class="token operator">=</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>val02<span class="token punctuation">)</span><span class="token operator">?</span> <span class="token number">0</span><span class="token operator">:</span>val02<span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>val01 <span class="token operator">&gt;</span> val02<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                  tmp <span class="token operator">=</span> arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">                arr<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">                arr<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">_this<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span></span>\n<span class="line">  <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>sub_tyfjb<span class="token punctuation">,</span></span>\n<span class="line">  <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span>oldVal</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token function">sortSubData</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>sub_tyfjb<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token function">sortSubData</span><span class="token punctuation">(</span>_this<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>previewForm<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>onlineForm<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>tyfjlb<span class="token punctuation">.</span><span class="token function">getInst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>rows<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【子表按钮后置调用表单脚本】" tabindex="-1"><a class="header-anchor" href="#【子表按钮后置调用表单脚本】"><span>【子表按钮后置调用表单脚本】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">表单脚本</span>\n<span class="line">_this<span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span><span class="token function-variable function">updateSummary</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">debugger</span></span>\n<span class="line">  <span class="token keyword">let</span> params <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">ckList</span><span class="token operator">:</span>data<span class="token punctuation">.</span>wzcktpb<span class="token punctuation">.</span>sub_wzcktpzb<span class="token punctuation">,</span></span>\n<span class="line">                <span class="token literal-property property">rkList</span><span class="token operator">:</span>data<span class="token punctuation">.</span>wzcktpb<span class="token punctuation">.</span>sub_tprkxxb<span class="token punctuation">,</span></span>\n<span class="line">                   <span class="token literal-property property">jjList</span><span class="token operator">:</span>data<span class="token punctuation">.</span>wzcktpb<span class="token punctuation">.</span>sub_wzckjjb<span class="token punctuation">,</span></span>\n<span class="line">                   <span class="token literal-property property">tjList</span><span class="token operator">:</span>data<span class="token punctuation">.</span>wzcktpb<span class="token punctuation">.</span>sub_wzcktjb<span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">  _req<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/purchases/pushVoucherApply/initSummaryData&#39;</span><span class="token punctuation">,</span>params<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>success<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">      data<span class="token punctuation">.</span>wzcktpb<span class="token punctuation">.</span>sub_wzckjjb <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>jjData<span class="token punctuation">;</span></span>\n<span class="line">      data<span class="token punctuation">.</span>wzcktpb<span class="token punctuation">.</span>sub_wzcktjb <span class="token operator">=</span> res<span class="token punctuation">.</span>data<span class="token punctuation">.</span>tjData<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">      _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">按钮后置：</span>\n<span class="line">_this<span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span><span class="token function">updateSummary</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【子表回填null值处理】" tabindex="-1"><a class="header-anchor" href="#【子表回填null值处理】"><span>【子表回填null值处理】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_this<span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span></span>\n<span class="line">    <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> data<span class="token punctuation">.</span>ejkckcxsqb<span class="token punctuation">.</span>sub_ejkckcxqdb<span class="token punctuation">,</span></span>\n<span class="line">    <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span>oldVal</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>newVal <span class="token operator">&amp;&amp;</span> newVal<span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        newVal<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> item<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">              <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">&#39;null&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                item<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">              <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【js获取当前时间】" tabindex="-1"><a class="header-anchor" href="#【js获取当前时间】"><span>【js获取当前时间】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">//到货日期</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>item<span class="token punctuation">.</span>dhrq<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">debugger</span></span>\n<span class="line">  item<span class="token punctuation">.</span>pjcgzq <span class="token operator">=</span> <span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>pjcgzq<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">?</span> <span class="token number">0</span><span class="token operator">:</span>item<span class="token punctuation">.</span>pjcgzq<span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">let</span> curDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            curDate<span class="token punctuation">.</span><span class="token function">setDate</span><span class="token punctuation">(</span>curDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>pjcgzq<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  item<span class="token punctuation">.</span>dhrq <span class="token operator">=</span> curDate<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;-&quot;</span><span class="token operator">+</span>curDate<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;-&quot;</span><span class="token operator">+</span>curDate<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">let</span> <span class="token function-variable function">getCurrentTime</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">var</span> date <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//当前时间</span></span>\n<span class="line">  <span class="token keyword">var</span> year <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">//返回指定日期的年份</span></span>\n<span class="line">  <span class="token keyword">var</span> month <span class="token operator">=</span> <span class="token function">repair</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//月</span></span>\n<span class="line">  <span class="token keyword">var</span> day <span class="token operator">=</span> <span class="token function">repair</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//日</span></span>\n<span class="line">  <span class="token keyword">var</span> hour <span class="token operator">=</span> <span class="token function">repair</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getHours</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//时</span></span>\n<span class="line">  <span class="token keyword">var</span> minute <span class="token operator">=</span> <span class="token function">repair</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getMinutes</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//分</span></span>\n<span class="line">  <span class="token keyword">var</span> second <span class="token operator">=</span> <span class="token function">repair</span><span class="token punctuation">(</span>date<span class="token punctuation">.</span><span class="token function">getSeconds</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//秒</span></span>\n<span class="line">  <span class="token comment">//当前时间 </span></span>\n<span class="line">  <span class="token keyword">var</span> curTime <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>year<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>month<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>day<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>hour<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>minute<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>second<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">return</span> curTime<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//补0</span></span>\n<span class="line"><span class="token keyword">let</span> <span class="token function-variable function">repair</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;=</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> i <span class="token operator">&lt;=</span> <span class="token number">9</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">return</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> i<span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">return</span> i<span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【其他日期格式化】" tabindex="-1"><a class="header-anchor" href="#【其他日期格式化】"><span>【其他日期格式化】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">var</span> now <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//当前日期</span></span>\n<span class="line"><span class="token keyword">var</span> nowDayOfWeek <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getDay</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//今天本周的第几天</span></span>\n<span class="line"><span class="token keyword">var</span> nowDay <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//当前日</span></span>\n<span class="line"><span class="token keyword">var</span> nowMonth <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//当前月</span></span>\n<span class="line"><span class="token keyword">var</span> nowYear <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//当前年</span></span>\n<span class="line">nowYear <span class="token operator">+=</span> <span class="token punctuation">(</span>nowYear <span class="token operator">&lt;</span> <span class="token number">2000</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token number">1900</span> <span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">//获得本季度的开始月份</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getQuaterStartMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> startMonth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span>nowMonth<span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        startMonth <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>nowMonth<span class="token operator">&gt;</span><span class="token number">2</span> <span class="token operator">&amp;&amp;</span> nowMonth<span class="token operator">&lt;</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        startMonth <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>nowMonth<span class="token operator">&gt;</span><span class="token number">5</span> <span class="token operator">&amp;&amp;</span> nowMonth<span class="token operator">&lt;</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        startMonth <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>nowMonth<span class="token operator">&gt;</span><span class="token number">8</span> <span class="token operator">&amp;&amp;</span> nowMonth<span class="token operator">&lt;</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        startMonth <span class="token operator">=</span> <span class="token number">9</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">return</span> startMonth<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//获得本季度开始时间</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getQuarterStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> quarterStartDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowYear<span class="token punctuation">,</span><span class="token function">getQuaterStartMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">formateDate</span><span class="token punctuation">(</span>quarterStartDate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">//获得本季度结束时间</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getQuarterEndDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> quarterEndMonth <span class="token operator">=</span> <span class="token function">getQuaterStartMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">var</span> quarterEndDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowYear<span class="token punctuation">,</span>quarterEndMonth<span class="token punctuation">,</span><span class="token function">getMonthDays</span><span class="token punctuation">(</span>quarterEndMonth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">formateDate</span><span class="token punctuation">(</span>quarterEndDate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//获取本月开始日期</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getMonthStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> monthStartDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowYear<span class="token punctuation">,</span> nowMonth<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">formateDate</span><span class="token punctuation">(</span>monthStartDate<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//获取本月结束日期</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getMonthEndDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> monthEndDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowYear<span class="token punctuation">,</span> nowMonth<span class="token punctuation">,</span> <span class="token function">getMonthDays</span><span class="token punctuation">(</span>nowMonth<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">formateDate</span><span class="token punctuation">(</span>monthEndDate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//获得本周开始日期</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getWeekStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> weekStartDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowYear<span class="token punctuation">,</span> nowMonth<span class="token punctuation">,</span> nowDay <span class="token operator">-</span> nowDayOfWeek</span>\n<span class="line">            <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">formateDate</span><span class="token punctuation">(</span>weekStartDate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//获取本周的结束日期</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getWeekEndDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> weekEndDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowYear<span class="token punctuation">,</span> nowMonth<span class="token punctuation">,</span> nowDay</span>\n<span class="line">            <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">7</span> <span class="token operator">-</span> nowDayOfWeek<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">formateDate</span><span class="token punctuation">(</span>weekEndDate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//获取本年的开始日期</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getYearStartDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">//获得当前年份4位年</span></span>\n<span class="line">    <span class="token keyword">var</span> currentYear <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token comment">//本年第一天</span></span>\n<span class="line">    <span class="token keyword">var</span> currentYearFirstDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>currentYear<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">formateDate</span><span class="token punctuation">(</span>currentYearFirstDate<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//获取本年的结束日期</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getYearEndDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">//获得当前年份4位年</span></span>\n<span class="line">    <span class="token keyword">var</span> currentYear <span class="token operator">=</span> now<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token comment">//本年最后</span></span>\n<span class="line">    <span class="token keyword">var</span> currentYearLastDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>currentYear<span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">formateDate</span><span class="token punctuation">(</span>currentYearLastDate<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//获得某月的天数</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">getMonthDays</span><span class="token punctuation">(</span><span class="token parameter">myMonth</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> monthStartDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowYear<span class="token punctuation">,</span> myMonth<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">var</span> monthEndDate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>nowYear<span class="token punctuation">,</span> myMonth <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">var</span> days <span class="token operator">=</span> <span class="token punctuation">(</span>monthEndDate <span class="token operator">-</span> monthStartDate<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">1000</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> days<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//格式化日期</span></span>\n<span class="line"><span class="token keyword">function</span> <span class="token function">formateDate</span><span class="token punctuation">(</span><span class="token parameter">date</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> myyear <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getFullYear</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">var</span> mymonth <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getMonth</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">var</span> myweekday <span class="token operator">=</span> date<span class="token punctuation">.</span><span class="token function">getDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    mymonth <span class="token operator">=</span> mymonth <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> mymonth <span class="token operator">:</span> mymonth<span class="token punctuation">;</span></span>\n<span class="line">    myweekday <span class="token operator">=</span> myweekday <span class="token operator">&lt;</span> <span class="token number">10</span> <span class="token operator">?</span> <span class="token string">&quot;0&quot;</span> <span class="token operator">+</span> myweekday <span class="token operator">:</span> myweekday<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span>myyear <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> mymonth <span class="token operator">+</span> <span class="token string">&quot;-&quot;</span> <span class="token operator">+</span> myweekday<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【获得部门领导】" tabindex="-1"><a class="header-anchor" href="#【获得部门领导】"><span>【获得部门领导】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> shrUrl <span class="token operator">=</span> <span class="token string">&#39;/official/myUtil/getOrgChargeByCode&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_req<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>shrUrl<span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>shr <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>userNames<span class="token punctuation">;</span><span class="token comment">//审核人</span></span>\n<span class="line">    data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>shrcode <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>userCodes<span class="token punctuation">;</span><span class="token comment">//审核人code</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【表单公式】" tabindex="-1"><a class="header-anchor" href="#【表单公式】"><span>【表单公式】</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">formulas.ts</span>\n<span class="line">(parseFloat(item.cksl)*parseFloat(item.dj)).toFixed(3)</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【表单标题修改】" tabindex="-1"><a class="header-anchor" href="#【表单标题修改】"><span>【表单标题修改】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;form-title el-row&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;el-col el-col-18&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span><span class="token string">&quot;xxx&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="【iweboffice编辑预览】" tabindex="-1"><a class="header-anchor" href="#【iweboffice编辑预览】"><span>【iweboffice编辑预览】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token number">1.</span>文件编辑</span>\n<span class="line"><span class="token keyword">let</span> fileId <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>zw<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> fileName <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>zw<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> fileExt <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>zw<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ext<span class="token punctuation">;</span></span>\n<span class="line">window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span></span>\n<span class="line">   <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://</span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>host <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/iWebOffice.html?type=1&amp;fileId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;fileName=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;userName=</span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span></span>\n<span class="line">   localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&amp;token=</span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;access_token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">   <span class="token string">&#39;newwindow&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">   <span class="token string">&#39;height=800, width=1200, top=0,left=200, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=no, status=no&#39;</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"><span class="token comment">/*POBrowser.headerToken = &#39;Authorization:&#39; + localStorage.access_token</span>\n<span class="line">POBrowser.openWindowModeless(</span>\n<span class="line">  `/filePreviewAndEditByPageOffice/${fileId}/${fileExt}/${localStorage.usercode}/true`,</span>\n<span class="line">  &#39;width=1200px;height=800px;&#39;</span>\n<span class="line">)*/</span></span>\n<span class="line"></span>\n<span class="line"><span class="token number">2.</span>文件预览</span>\n<span class="line"><span class="token keyword">let</span> fileId <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>zw<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> fileName <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>zw<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> fileExt <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>zw<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>ext<span class="token punctuation">;</span></span>\n<span class="line">window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span></span>\n<span class="line">   <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://</span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span> window<span class="token punctuation">.</span>location<span class="token punctuation">.</span>host <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/iWebOffice.html?type=0&amp;fileId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;fileName=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;userName=</span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span></span>\n<span class="line">   localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;username&#39;</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">&amp;token=</span><span class="token template-punctuation string">`</span></span> <span class="token operator">+</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;access_token&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">   <span class="token string">&#39;newwindow&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">   <span class="token string">&#39;height=800, width=1200, top=0,left=200, toolbar=no, menubar=no, scrollbars=no, resizable=no,location=no, status=no&#39;</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"><span class="token comment">/*POBrowser.headerToken = &#39;Authorization:&#39; + localStorage.access_token</span>\n<span class="line">POBrowser.openWindowModeless(</span>\n<span class="line">  `/filePreviewAndEditByPageOffice/${fileId}/${fileExt}/${localStorage.usercode}/false`,</span>\n<span class="line">  &#39;width=1200px;height=800px;&#39;</span>\n<span class="line">)*/</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【pdf预览】" tabindex="-1"><a class="header-anchor" href="#【pdf预览】"><span>【PDF预览】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> zw <span class="token operator">=</span> data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>zw<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>zw<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&#39;正文不存在，请联系管理员&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">  <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">let</span> fileId <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>zw<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponent <span class="token operator">=</span> _this<span class="token punctuation">.</span><span class="token function">dynamicImport</span><span class="token punctuation">(</span><span class="token string">&#39;projectTools/views/office/customPdfPreview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> width <span class="token operator">=</span> window<span class="token punctuation">.</span>innerWidth<span class="token operator">*</span><span class="token number">0.8</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> height <span class="token operator">=</span> window<span class="token punctuation">.</span>innerHeight<span class="token operator">*</span><span class="token number">0.6</span> <span class="token operator">+</span> <span class="token string">&#39;px&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">&#39;PDF预览&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">fileId</span><span class="token operator">:</span>fileId<span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">visible</span><span class="token operator">:</span><span class="token boolean">true</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">width</span><span class="token operator">:</span>width<span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">height</span><span class="token operator">:</span>height</span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentVisible <span class="token operator">=</span> <span class="token boolean">true</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【平台文件下载】" tabindex="-1"><a class="header-anchor" href="#【平台文件下载】"><span>【平台文件下载】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"># 参考一</span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>_this<span class="token punctuation">.</span>checkedTableData<span class="token punctuation">.</span>length<span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&quot;请选择一个申请单数据&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">if</span><span class="token punctuation">(</span>_this<span class="token punctuation">.</span>checkedTableData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>sfbkc<span class="token operator">==</span><span class="token string">&#39;是&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&quot;【备库存】申请单不能导出，请重新选择&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token keyword">let</span> applyId <span class="token operator">=</span> _this<span class="token punctuation">.</span>checkedTableData<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id_<span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">await</span> _req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/purchases/purchaseApply/exportApplyPdf?applyId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>applyId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;blob&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">  <span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>response<span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token literal-property property">type</span><span class="token operator">:</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">]</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">const</span> fileName <span class="token operator">=</span> <span class="token function">decodeURI</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-disposition&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token keyword">const</span> aLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  aLink<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">  aLink<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  aLink<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName<span class="token punctuation">;</span></span>\n<span class="line">  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>aLink<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  aLink<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 解决部分浏览器下载时 “无此文件” 问题</span></span>\n<span class="line">  <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token comment">// 释放 URL对象</span></span>\n<span class="line">      <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>aLink<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">      aLink<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"># 参考二</span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>_row<span class="token punctuation">.</span>wj<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token comment">//PDF，/file/downloadPdfFileByFileId?fileId=1625458710425894912</span></span>\n<span class="line"><span class="token keyword">let</span> fileId <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>_row<span class="token punctuation">.</span>wj<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> _req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/file/downloadTempFileByFileId?fileId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;blob&#39;</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">_req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">params</span><span class="token operator">:</span><span class="token punctuation">{</span></span>\n<span class="line">   <span class="token literal-property property">ids</span><span class="token operator">:</span> dataId<span class="token punctuation">,</span></span>\n<span class="line">   <span class="token literal-property property">tableName</span><span class="token operator">:</span><span class="token string">&#39;W_cgdjsqb&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">   <span class="token literal-property property">fileName</span><span class="token operator">:</span><span class="token string">&#39;询价单&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">   <span class="token literal-property property">docTempName</span><span class="token operator">:</span><span class="token string">&#39;quotation.doc&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">   <span class="token literal-property property">isNeedCodeImage</span><span class="token operator">:</span><span class="token string">&#39;true&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">   <span class="token literal-property property">otherInfo</span><span class="token operator">:</span><span class="token string">&#39;&#39;</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;blob&#39;</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>response<span class="token punctuation">.</span>data<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-type&#39;</span><span class="token punctuation">]</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> fileName <span class="token operator">=</span> <span class="token function">decodeURI</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>headers<span class="token punctuation">[</span><span class="token string">&#39;content-disposition&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//let</span></span>\n<span class="line"><span class="token comment">//let fileName = fileName.substring(0,fileName.lastIndexOf(&quot;.&quot;)) + &#39;.pdf&#39;;</span></span>\n<span class="line"><span class="token keyword">const</span> aLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">aLink<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">aLink<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">createObjectURL</span><span class="token punctuation">(</span>blob<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">aLink<span class="token punctuation">.</span>download <span class="token operator">=</span> fileName<span class="token punctuation">;</span></span>\n<span class="line">document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>aLink<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">aLink<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 解决部分浏览器下载时 “无此文件” 问题</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// 释放 URL对象</span></span>\n<span class="line">    <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>aLink<span class="token punctuation">.</span>href<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    aLink<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-列表定制相关" tabindex="-1"><a class="header-anchor" href="#_1-2-列表定制相关"><span>1.2 列表定制相关</span></a></h3><h4 id="【刷新列表-数据视图】" tabindex="-1"><a class="header-anchor" href="#【刷新列表-数据视图】"><span>【刷新列表/数据视图】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">【刷新数据视图】</span>\n<span class="line">_this<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>previewForm<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>onlineForm<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>tyfjlb<span class="token punctuation">.</span><span class="token function">getInst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">按钮中：</span>\n<span class="line">formVm<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>onlineForm<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>ejkptkfkwxg<span class="token punctuation">.</span><span class="token function">getInst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">formVm<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>onlineForm<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>ejkptkfkwxg<span class="token punctuation">.</span><span class="token function">getInst</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>checkedTableData</span>\n<span class="line">【刷新表单列表】</span>\n<span class="line">_this<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>$refs<span class="token punctuation">.</span>dataTemplateTable<span class="token punctuation">.</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【勾选数据按钮事件】" tabindex="-1"><a class="header-anchor" href="#【勾选数据按钮事件】"><span>【勾选数据按钮事件】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>_this<span class="token punctuation">.</span>checkedTableData<span class="token punctuation">.</span>length<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&quot;请选择数据&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>_this<span class="token punctuation">.</span>checkedTableData<span class="token punctuation">.</span>length<span class="token operator">!=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&quot;仅能选择一条数据&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">let</span> ids <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">let</span> checkMsg <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>checkedTableData<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        ids <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>ids<span class="token operator">?</span> <span class="token string">&quot;,&quot;</span><span class="token operator">+</span>item<span class="token punctuation">.</span>id_<span class="token operator">:</span>item<span class="token punctuation">.</span>id_<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>spzt<span class="token operator">!=</span><span class="token string">&#39;未审批&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">             checkMsg <span class="token operator">=</span> <span class="token string">&quot;仅能选择未审批合同，请重新选择&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>checkMsg<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>checkMsg<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">return</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>checked <span class="token operator">=</span> _this<span class="token punctuation">.</span>checkedTableData<span class="token punctuation">;</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>orgCode <span class="token operator">=</span> localStorage<span class="token punctuation">.</span>orgCode<span class="token punctuation">;</span></span>\n<span class="line">    _utils<span class="token punctuation">.</span><span class="token function">openStartFlow</span><span class="token punctuation">(</span></span>\n<span class="line">        _this<span class="token punctuation">,</span></span>\n<span class="line">        _this<span class="token punctuation">.</span>clientNum<span class="token punctuation">,</span></span>\n<span class="line">        <span class="token string">&#39;1689823624879407104&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token string">&#39;物资物料入库申请流程&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token string">&#39;&#39;</span></span>\n<span class="line">    <span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    _this<span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">&#39;确定取消采购定价?&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">&#39;确定&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">        _req<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>_this<span class="token punctuation">.</span>checkedTableData<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;取消采购定价成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            _this<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【列表初始化按钮事件】" tabindex="-1"><a class="header-anchor" href="#【列表初始化按钮事件】"><span>【列表初始化按钮事件】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&quot;初始化中...&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">let</span> _me <span class="token operator">=</span> _this<span class="token punctuation">;</span></span>\n<span class="line">_req<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/purchases/storageDetail/initAddFieldInfo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">if</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>success<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    _me<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;初始化成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    _me<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">    _me<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【按钮权限-场景判断】" tabindex="-1"><a class="header-anchor" href="#【按钮权限-场景判断】"><span>【按钮权限，场景判断】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">return</span> <span class="token operator">!</span>_this<span class="token punctuation">.</span>queryParams<span class="token punctuation">.</span>scene <span class="token operator">||</span> _this<span class="token punctuation">.</span>queryParams<span class="token punctuation">.</span>scene <span class="token operator">==</span> <span class="token string">&quot;wpf&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="【删除确认弹框定制】" tabindex="-1"><a class="header-anchor" href="#【删除确认弹框定制】"><span>【删除确认弹框定制】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> moduleId <span class="token operator">=</span> _row<span class="token punctuation">.</span>id_</span>\n<span class="line">_this<span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">&#39;是否取消收藏?&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">&#39;确定&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">await</span> _req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/official/CollectionModule/cancelCollectionFunction?moduleId=&#39;</span><span class="token operator">+</span>moduleId<span class="token punctuation">)</span></span>\n<span class="line">  _this<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【编辑保存前置确认弹框】" tabindex="-1"><a class="header-anchor" href="#【编辑保存前置确认弹框】"><span>【编辑保存前置确认弹框】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">&#39;正文是否已套红？&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">&#39;确定&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">return</span> res<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【审批状态-流程监控】" tabindex="-1"><a class="header-anchor" href="#【审批状态-流程监控】"><span>【审批状态-流程监控】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>_row<span class="token punctuation">.</span>sqdzt<span class="token operator">!=</span><span class="token string">&#39;草稿&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  _utils<span class="token punctuation">.</span><span class="token function">openProcessMonitor</span><span class="token punctuation">(</span></span>\n<span class="line">      _this<span class="token punctuation">,</span></span>\n<span class="line">      _this<span class="token punctuation">.</span>clientNum<span class="token punctuation">,</span></span>\n<span class="line">      _row<span class="token punctuation">.</span>id_<span class="token punctuation">,</span></span>\n<span class="line">      <span class="token string">&#39;ckczsqlc&#39;</span></span>\n<span class="line">  <span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【流程启动窗口】" tabindex="-1"><a class="header-anchor" href="#【流程启动窗口】"><span>【流程启动窗口】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_utils<span class="token punctuation">.</span><span class="token function">openStartFlow</span><span class="token punctuation">(</span></span>\n<span class="line">  _this<span class="token punctuation">,</span></span>\n<span class="line">  _this<span class="token punctuation">.</span>clientNum<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>procDefId<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>title<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>dataId</span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【流程执行窗口】" tabindex="-1"><a class="header-anchor" href="#【流程执行窗口】"><span>【流程执行窗口】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_utils<span class="token punctuation">.</span><span class="token function">openToTaskFlow</span><span class="token punctuation">(</span></span>\n<span class="line">  _this<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>clientNum<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>taskId<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>procDefId<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>procInstId<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>businessKey<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>nodeId<span class="token punctuation">,</span></span>\n<span class="line">  item<span class="token punctuation">.</span>procDefName</span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【流程监控窗口】" tabindex="-1"><a class="header-anchor" href="#【流程监控窗口】"><span>【流程监控窗口】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_utils<span class="token punctuation">.</span><span class="token function">openProcessMonitor</span><span class="token punctuation">(</span></span>\n<span class="line">    _this<span class="token punctuation">,</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>clientNum<span class="token punctuation">,</span></span>\n<span class="line">    item<span class="token punctuation">.</span>businessKey<span class="token punctuation">,</span></span>\n<span class="line">    item<span class="token punctuation">.</span>procDefKey</span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【表单列表新窗口】" tabindex="-1"><a class="header-anchor" href="#【表单列表新窗口】"><span>【表单列表新窗口】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> querys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>\n<span class="line"><span class="token comment">//封装查询条件</span></span>\n<span class="line">querys<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">property</span><span class="token operator">:</span> <span class="token string">&#39;F_KMZJ&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">value</span><span class="token operator">:</span> _row<span class="token punctuation">.</span><span class="token constant">ID</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">group</span><span class="token operator">:</span> <span class="token string">&#39;main&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">relation</span><span class="token operator">:</span> <span class="token string">&#39;AND&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">operation</span><span class="token operator">:</span> <span class="token string">&#39;IN&#39;</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">const</span> parameterqQuerys <span class="token operator">=</span></span>\n<span class="line">        querys<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span></span>\n<span class="line">          <span class="token operator">?</span> <span class="token function">encodeURIComponent</span><span class="token punctuation">(</span>_this<span class="token punctuation">.</span>$Base64<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>querys<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line">          <span class="token operator">:</span> <span class="token string">&#39;&#39;</span></span>\n<span class="line"><span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>_this<span class="token punctuation">.</span>clientNum<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/dataTemplatePreview/zjzt/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>_this<span class="token punctuation">.</span>clientNum<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/true/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>parameterqQuerys<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span>\n<span class="line">_this<span class="token punctuation">.</span>$WindowUtil<span class="token punctuation">.</span><span class="token function">openFullWindow</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">flowTitle</span><span class="token operator">:</span> _this<span class="token punctuation">.</span>$Base64<span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span><span class="token string">&#39;资金在途金额&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【打开新窗口】" tabindex="-1"><a class="header-anchor" href="#【打开新窗口】"><span>【打开新窗口】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_this<span class="token punctuation">.</span>$WindowUtil<span class="token punctuation">.</span><span class="token function">openFullWindow</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/ibms-712S-contract/dataTemplate/FormPreview/xckdkbdmxxx/ibms-712S-contract/detail/false/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>_row<span class="token punctuation">.</span>id_<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/false/true</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">{</span><span class="token literal-property property">dataId</span><span class="token operator">:</span> _row<span class="token punctuation">.</span><span class="token constant">ID_</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">key</span><span class="token operator">:</span><span class="token string">&#39;cghttzlbd&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span> </span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【新窗口关闭回调】" tabindex="-1"><a class="header-anchor" href="#【新窗口关闭回调】"><span>【新窗口关闭回调】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">import</span> utils <span class="token keyword">from</span> <span class="token string">&#39;@/utils.ts&#39;</span></span>\n<span class="line"><span class="token keyword">let</span> _me <span class="token operator">=</span> <span class="token keyword">this</span></span>\n<span class="line"><span class="token comment">// 流程执行新窗口关闭前的回调</span></span>\n<span class="line">window<span class="token punctuation">.</span><span class="token function-variable function">handleTaskList</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  _me<span class="token punctuation">.</span><span class="token function">loadTask</span><span class="token punctuation">(</span><span class="token string">&#39;update&#39;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【自定义弹框】" tabindex="-1"><a class="header-anchor" href="#【自定义弹框】"><span>【自定义弹框】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"># 表单弹框</span>\n<span class="line">_this<span class="token punctuation">.</span>customComponent <span class="token operator">=</span> _utils<span class="token punctuation">.</span><span class="token function">dynamicImport</span><span class="token punctuation">(</span><span class="token string">&#39;projectTools/views/dataTemplate/customFormPreview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>templateKey <span class="token operator">=</span> <span class="token string">&#39;wzwlkflb&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token string">&#39;detail&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>rowId <span class="token operator">=</span> _row<span class="token punctuation">.</span>ref_id_<span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>formStyle <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span><span class="token string">&#39;80%&#39;</span><span class="token punctuation">,</span><span class="token literal-property property">height</span><span class="token operator">:</span><span class="token string">&#39;60%&#39;</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>selfDefinedParams <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;ids&#39;</span><span class="token operator">:</span> ids<span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>selfDefinedParams <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string-property property">&#39;checked&#39;</span><span class="token operator">:</span> _this<span class="token punctuation">.</span>checkedTableData<span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>beforeSaveScript <span class="token operator">=</span> <span class="token string">&#39;debugger \\n return false;&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>beforeSaveScript <span class="token operator">=</span> <span class="token string">&#39;let res = await _req.post(`/purchases/outStorageSplit/startFlowEvent`,{sfrejk:_formData.sfrejk,subData:_formData.sub_wzwlckcfzib});\\n if(!res.meta.success){_this.$message.warning(res.meta.message);}\\n return res.meta.success;&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>afterScript <span class="token operator">=</span> <span class="token string">&#39;let id_ = _formData.data.id_;\\n _req.post(`/purchases/outStorageSplit/outStorageSplitClear?bussinessKey=${id_}`);&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line"># 列表弹框</span>\n<span class="line">_this<span class="token punctuation">.</span>customComponent <span class="token operator">=</span> _utils<span class="token punctuation">.</span><span class="token function">dynamicImport</span><span class="token punctuation">(</span><span class="token string">&#39;projectTools/views/dataTemplate/customTemplatePreview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>clientNum <span class="token operator">=</span> <span class="token string">&#39;ibms-712S-contract&#39;</span><span class="token punctuation">;</span><span class="token comment">//_this.clientNum</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>noload <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>templateKey <span class="token operator">=</span> <span class="token string">&#39;cgdjxjdtzlb&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>customQueryParams <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">REF_ID_=&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>_row<span class="token punctuation">.</span>id_<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>title <span class="token operator">=</span> <span class="token string">&#39;详情&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>selfDefinedParams <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"># 其他示例，打开自定义表单明细</span>\n<span class="line">_this<span class="token punctuation">.</span>customComponent <span class="token operator">=</span> _utils<span class="token punctuation">.</span><span class="token function">dynamicImport</span><span class="token punctuation">(</span><span class="token string">&#39;projectTools/views/dataTemplate/customFormPreview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>templateKey <span class="token operator">=</span> <span class="token string">&#39;xmchqk&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>action <span class="token operator">=</span> <span class="token string">&#39;detail&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>rowId <span class="token operator">=</span> _row<span class="token punctuation">.</span>id_<span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">templateKey</span><span class="token operator">:</span> <span class="token string">&#39;xmchqk&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;detail&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">rowId</span><span class="token operator">:</span> _row<span class="token punctuation">.</span>ssmkzj<span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">formStyle</span><span class="token operator">:</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">width</span><span class="token operator">:</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">height</span><span class="token operator">:</span><span class="token string">&#39;100%&#39;</span></span>\n<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">afterScript</span><span class="token operator">:</span> <span class="token string">&#39;let _data = _formData.data\\n _data.id=_data.id_\\n await _req.post(`/pm/projectTask/setTaskSortNum`, _formData.data)&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【弹框beforesavescript示例】" tabindex="-1"><a class="header-anchor" href="#【弹框beforesavescript示例】"><span>【弹框beforeSaveScript示例】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>beforeSaveScript <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"></span>\n<span class="line">      _formData.sqr = &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sqr<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;</span>\n<span class="line">      _formData.sqrcode = &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sqrcode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;</span>\n<span class="line">      _formData.sqrq = &#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>sqrq<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;;</span>\n<span class="line">      _formData.qyzt = &#39;&#39;;</span>\n<span class="line">   return true;</span>\n<span class="line">  </span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【弹框afterscript示例】" tabindex="-1"><a class="header-anchor" href="#【弹框afterscript示例】"><span>【弹框afterScript示例】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"># 参考一</span>\n<span class="line"><span class="token keyword">let</span> uptParams <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">{ids:&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>cgqdIds<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,tableName:&#39;W_wzwlcgqdb&#39;,fieldName:&#39;F_cgjz&#39;,status:&#39;询价备案&#39;}</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>afterScript <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">_this.$message.warning(&#39;状态更新中，请稍候...&#39;);\\n await _req.post(&#39;/purchases/myUtil/updateStatus&#39;,</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>uptParams<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"># 参考二</span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>afterScript <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">_this.$message.warning(&#39;状态更新中，请稍候...&#39;);\\n let zbId=_formData.data.id_;\\n await _req.post(&#39;/purchases/pricingApply/savePostEvent?applyId=&#39;+zbId)</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"># 参考三</span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams<span class="token punctuation">.</span>afterScript <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">//从参数管理中初始化运维部门</span>\n<span class="line">    _req.post(&#39;/purchases/categoryMap/initCatalogMapOrg&#39;).then(function(res){</span>\n<span class="line">      if(res.meta.success){</span>\n<span class="line">        _this.$message.success(&quot;运维部门从【品类地图】更新成功&quot;);</span>\n<span class="line">      }else{</span>\n<span class="line">        _this.$message.warning(res.meta.message);</span>\n<span class="line">      }</span>\n<span class="line">    });</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【流程发起弹框】" tabindex="-1"><a class="header-anchor" href="#【流程发起弹框】"><span>【流程发起弹框】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_this<span class="token punctuation">.</span>customComponent <span class="token operator">=</span> _utils<span class="token punctuation">.</span><span class="token function">dynamicImport</span><span class="token punctuation">(</span><span class="token string">&#39;projectTools/views/dataTemplate/customFlowPreview&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token comment">// 类型 表单（form），流程（flow）</span></span>\n<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;flow&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token comment">// 表单列表</span></span>\n<span class="line">  <span class="token literal-property property">templateKey</span><span class="token operator">:</span> <span class="token string">&#39;ytxxwhlb&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token comment">// 流程id</span></span>\n<span class="line">  <span class="token literal-property property">flowId</span><span class="token operator">:</span><span class="token string">&#39;1592457413095587840&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token comment">// 类型</span></span>\n<span class="line">  <span class="token literal-property property">action</span><span class="token operator">:</span> <span class="token string">&#39;flow-add&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">dataId</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">formStyle</span><span class="token operator">:</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">width</span><span class="token operator">:</span><span class="token string">&#39;100%&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">height</span><span class="token operator">:</span><span class="token string">&#39;100%&#39;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token literal-property property">selfDefinedParams</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">data</span><span class="token operator">:</span> _row<span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentVisible <span class="token operator">=</span> <span class="token boolean">true</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【流程实例弹框】" tabindex="-1"><a class="header-anchor" href="#【流程实例弹框】"><span>【流程实例弹框】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> response <span class="token operator">=</span> <span class="token keyword">await</span> req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/bpmn/inst/get-by-boDataId?boDataId=&#39;</span><span class="token operator">+</span>gwzbid<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponent <span class="token operator">=</span> _this<span class="token punctuation">.</span><span class="token function">dynamicImport</span><span class="token punctuation">(</span><span class="token string">&#39;projectTools/views/dataTemplate/customFlowPreview&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">// customComponentParams：传递给自定义弹窗组件的参数，默认为{}空对象，所有需要传递的参数都通过该对象传递</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentParams <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;主流程信息&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;inst-monitor&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">dataId</span><span class="token operator">:</span> gwzbid<span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">instId</span><span class="token operator">:</span> response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>id</span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">// 打开自定义的弹出组件</span></span>\n<span class="line">_this<span class="token punctuation">.</span>customComponentVisible <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【合计行通用方法】" tabindex="-1"><a class="header-anchor" href="#【合计行通用方法】"><span>【合计行通用方法】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>length <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">let</span> sumMoneyColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;F_HTJE&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;F_LJYFJE&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;F_SYFKJE&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;F_LJSPJE&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">let</span> sumNumColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;F_HTSL&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;F_HGSL&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">let</span> avgPercentColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">let</span> avgMoneyColumns <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;F_HTDJ&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">const</span> sums <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">    columns<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">column<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>property<span class="token operator">==</span><span class="token string">&#39;F_HTYF&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;全部合计：&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sumMoneyColumns<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>property<span class="token punctuation">)</span><span class="token operator">||</span>sumNumColumns<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">const</span> values <span class="token operator">=</span> data<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token function">Number</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span>column<span class="token punctuation">.</span>property<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>values<span class="token punctuation">.</span><span class="token function">every</span><span class="token punctuation">(</span><span class="token parameter">value</span> <span class="token operator">=&gt;</span> <span class="token function">isNaN</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> values<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">prev<span class="token punctuation">,</span> curr</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">                    <span class="token keyword">const</span> value <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>curr<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                        <span class="token keyword">return</span> prev <span class="token operator">+</span> curr<span class="token punctuation">;</span></span>\n<span class="line">                    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">                        <span class="token keyword">return</span> prev<span class="token punctuation">;</span></span>\n<span class="line">                    <span class="token punctuation">}</span></span>\n<span class="line">                <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">if</span><span class="token punctuation">(</span>sumMoneyColumns<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                    sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> _utils<span class="token punctuation">.</span><span class="token function">thousandBit</span><span class="token punctuation">(</span>sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;元&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>sumNumColumns<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                    sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> _utils<span class="token punctuation">.</span><span class="token function">thousandBit</span><span class="token punctuation">(</span>sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">              sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;N/A&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>avgPercentColumns<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>property<span class="token punctuation">)</span><span class="token operator">||</span>avgMoneyColumns<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">let</span> totalVal <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">let</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">debugger</span></span>\n<span class="line">            data<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">item</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                <span class="token keyword">let</span> val <span class="token operator">=</span> <span class="token function">parseFloat</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span>column<span class="token punctuation">.</span>property<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isNaN</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                    totalVal <span class="token operator">+=</span> val<span class="token punctuation">;</span></span>\n<span class="line">                    num <span class="token operator">+=</span> <span class="token number">1</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>avgPercentColumns<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                <span class="token keyword">if</span><span class="token punctuation">(</span>num<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                    sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;0%&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">                    sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>totalVal<span class="token operator">/</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;%&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>avgMoneyColumns<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>column<span class="token punctuation">.</span>property<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> _utils<span class="token punctuation">.</span><span class="token function">thousandBit</span><span class="token punctuation">(</span><span class="token punctuation">(</span>totalVal<span class="token operator">/</span>num<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&#39;元&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">            sums<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> sums<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span> </span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【更新数据通用方法】" tabindex="-1"><a class="header-anchor" href="#【更新数据通用方法】"><span>【更新数据通用方法】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> uptParams <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">{ids:&#39;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>wzwlckb<span class="token punctuation">.</span>id_<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&#39;,tableName:&#39;w_wzwlckb&#39;,fieldName:&#39;F_bhwcsj&#39;,status:&#39;SYSDATE&#39;}</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span></span>\n<span class="line">_req<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/purchases/myUtil/updateStatus&#39;</span><span class="token punctuation">,</span>$<span class="token punctuation">{</span>uptParams<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    _this<span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;更新成功&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    location<span class="token punctuation">.</span><span class="token function">reload</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【单点】" tabindex="-1"><a class="header-anchor" href="#【单点】"><span>【单点】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> _me <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">;</span></span>\n<span class="line">window<span class="token punctuation">.</span><span class="token function-variable function">handleList</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  _me<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">http://192.168.2.63:8082/ssoLogin?type=/ibms-712S-purchases/startFlow/1776808580067901440/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>_row<span class="token punctuation">.</span>id_<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"># 其他参考</span>\n<span class="line">window<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&quot;http://192.168.159.2/ssoCA?type=/ibms-712S-purchases/startFlow/1776808580067901440/1795028778912948225&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-3-流程设计相关" tabindex="-1"><a class="header-anchor" href="#_1-3-流程设计相关"><span>1.3 流程设计相关</span></a></h3><h4 id="【同意按钮前置确认框】" tabindex="-1"><a class="header-anchor" href="#【同意按钮前置确认框】"><span>【同意按钮前置确认框】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$confirm</span><span class="token punctuation">(</span><span class="token string">&#39;承办任务是否已办结？传阅任务是否已办结？&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;提示&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token literal-property property">confirmButtonText</span><span class="token operator">:</span> <span class="token string">&#39;确定&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">cancelButtonText</span><span class="token operator">:</span> <span class="token string">&#39;取消&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">          <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">return</span> res<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【网关分支条件】" tabindex="-1"><a class="header-anchor" href="#【网关分支条件】"><span>【网关分支条件】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>boData<span class="token punctuation">.</span><span class="token function">getByKey</span><span class="token punctuation">(</span><span class="token string">&quot;sfsmwj&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;否&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>boData<span class="token punctuation">.</span><span class="token function">getByKey</span><span class="token punctuation">(</span><span class="token string">&quot;mj&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token operator">!</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>boData<span class="token punctuation">.</span><span class="token function">getByKey</span><span class="token punctuation">(</span><span class="token string">&quot;mj&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;3&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token class-name">Double</span><span class="token punctuation">.</span><span class="token function">parseDouble</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span></span>\n<span class="line"></span>\n<span class="line">boData<span class="token punctuation">.</span><span class="token function">getByKey</span><span class="token punctuation">(</span><span class="token string">&quot;bglx&quot;</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token char">&#39;项目密级变更&#39;</span> <span class="token operator">||</span> boData<span class="token punctuation">.</span><span class="token function">getByKey</span><span class="token punctuation">(</span><span class="token string">&quot;bglx&quot;</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token char">&#39;项目密级解除&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【初始赋值-当前时间】" tabindex="-1"><a class="header-anchor" href="#【初始赋值-当前时间】"><span>【初始赋值，当前时间】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">rwb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;sjjssj&quot;</span><span class="token punctuation">,</span> scriptImpl<span class="token punctuation">.</span><span class="token function">getCurrentDateByStyle</span><span class="token punctuation">(</span><span class="token string">&#39;yyyy-MM-dd HH:mm:ss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">rwb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;sjjssj&quot;</span><span class="token punctuation">,</span> scriptImpl<span class="token punctuation">.</span><span class="token function">getCurrentDate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">import</span> com<span class="token punctuation">.</span>ibms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span>date<span class="token punctuation">.</span>DateUtil<span class="token punctuation">;</span></span>\n<span class="line">nrfb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;fbsj&quot;</span><span class="token punctuation">,</span> DateUtil<span class="token punctuation">.</span><span class="token function">getCurrentTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【初始赋值-业务判断】" tabindex="-1"><a class="header-anchor" href="#【初始赋值-业务判断】"><span>【初始赋值，业务判断】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>boData<span class="token punctuation">.</span><span class="token function">getByKey</span><span class="token punctuation">(</span><span class="token string">&quot;sfwgycl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;是&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    swybb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;spzt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;clz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//处理中</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>boData<span class="token punctuation">.</span><span class="token function">getByy</span><span class="token punctuation">(</span><span class="token string">&quot;sfxycy&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;是&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    swybb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;spzt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;cyz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//传阅中</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">    swybb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;spzt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yyb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//已阅办</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">valueOf</span><span class="token punctuation">(</span>boData<span class="token punctuation">.</span><span class="token function">getByKey</span><span class="token punctuation">(</span><span class="token string">&quot;sfwgycl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span><span class="token string">&quot;是&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    swybb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;spzt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;clz&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//处理中</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">    swybb<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;spzt&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;yyb&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//已阅办</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【按钮前置脚本】" tabindex="-1"><a class="header-anchor" href="#【按钮前置脚本】"><span>【按钮前置脚本】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token number">1</span>）如果流程绑定的是代码生成的外部表单，则必须要在发起流程的按钮前置脚本中加入以下代码，以免出现后续节点审批时数据dataId不对应问题。（action为当前流程数据，dataId为当前审批数据的id）</span>\n<span class="line">    action<span class="token punctuation">.</span>businessKey <span class="token operator">=</span> _this<span class="token punctuation">.</span>dataId</span>\n<span class="line">    <span class="token keyword">return</span> <span class="token boolean">true</span></span>\n<span class="line"><span class="token number">2</span>）处理简单逻辑（formData 为当前表单数据）</span>\n<span class="line">    <span class="token comment">//场景1</span></span>\n<span class="line">        formData<span class="token punctuation">.</span>tableName<span class="token punctuation">.</span>spzt<span class="token operator">=</span><span class="token string">&#39;审批中&#39;</span></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token boolean">true</span></span>\n<span class="line">    <span class="token comment">//场景2</span></span>\n<span class="line">        <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>formData<span class="token punctuation">.</span>tableName<span class="token punctuation">.</span>code <span class="token operator">===</span> formData<span class="token punctuation">.</span>tableName<span class="token punctuation">.</span>password<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&#39;账号和密码不能相同，请修改！&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">          res<span class="token operator">=</span><span class="token boolean">false</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">          res<span class="token operator">=</span><span class="token boolean">true</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token keyword">return</span> res</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【按钮后置脚本】" tabindex="-1"><a class="header-anchor" href="#【按钮后置脚本】"><span>【按钮后置脚本】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">    <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token boolean">false</span></span>\n<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> _req<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&#39;/dataPacket/dataPacketList/updataSpzt&#39;</span><span class="token punctuation">,</span>formData<span class="token punctuation">.</span>tableName<span class="token punctuation">.</span>id<span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>success<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      res<span class="token operator">=</span><span class="token boolean">true</span></span>\n<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>message<span class="token punctuation">)</span></span>\n<span class="line">      res<span class="token operator">=</span><span class="token boolean">false</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">return</span> res</span>\n<span class="line"></span>\n<span class="line">    <span class="token comment">//文件页数</span></span>\n<span class="line">    <span class="token keyword">let</span> fileId <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>zw<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">let</span> pageUrl <span class="token operator">=</span> <span class="token string">&#39;/official/myUtil/getFilePageNum&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">let</span> pageParams <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token literal-property property">fileId</span><span class="token operator">:</span>fileId<span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">    _req<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span>pageUrl<span class="token punctuation">,</span>pageParams<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">response</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">        data<span class="token punctuation">.</span>gwfbb<span class="token punctuation">.</span>wjys <span class="token operator">=</span> response<span class="token punctuation">.</span>data<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line">    <span class="token keyword">const</span> rp <span class="token operator">=</span><span class="token keyword">await</span> _req<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;/official/signingReport/judgmentPartyOfficials?userCode=&#39;</span><span class="token operator">+</span>currentUser<span class="token punctuation">.</span>code<span class="token operator">+</span><span class="token string">&#39;&amp;orgCode=dqzz&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">    data<span class="token punctuation">.</span>qbb<span class="token punctuation">.</span>sfwdbry <span class="token operator">=</span> rp<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>message</span>\n<span class="line"></span>\n<span class="line">ajax写法：（旧）</span>\n<span class="line">    <span class="token keyword">var</span> res <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">var</span> businessKey <span class="token operator">=</span> action<span class="token punctuation">.</span>businessKey</span>\n<span class="line">    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">async</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token literal-property property">headers</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token literal-property property">Authorization</span><span class="token operator">:</span> localStorage<span class="token punctuation">.</span>access_token</span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token literal-property property">url</span><span class="token operator">:</span> <span class="token string">&#39;/sun/dataPacket/DataPacketDeliver/opreFlowAfterEvent?businessKey=&#39;</span><span class="token operator">+</span>businessKey<span class="token operator">+</span><span class="token string">&#39;&amp;opreType=start&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token function-variable function">success</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>meta<span class="token punctuation">.</span>success<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            res <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        <span class="token function-variable function">error</span><span class="token operator">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token keyword">return</span> res<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-4-vue-html页面定制" tabindex="-1"><a class="header-anchor" href="#_1-4-vue-html页面定制"><span>1.4 Vue/Html页面定制</span></a></h3><h4 id="【导入页模板下载】" tabindex="-1"><a class="header-anchor" href="#【导入页模板下载】"><span>【导入页模板下载】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> downloadFileByBlob <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@ibms/tools&#39;</span></span>\n<span class="line"><span class="token comment">//下载模板</span></span>\n<span class="line"><span class="token keyword">private</span> <span class="token keyword">async</span> <span class="token function">handledownload</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> request<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span></span>\n<span class="line">      <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/finance/budgetPeriod/downLoadBudgetPeriod?fileName=预算期间表导入模板.xlsx</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">responseType</span><span class="token operator">:</span> <span class="token string">&#39;blob&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">)</span></span>\n<span class="line">    <span class="token function">downloadFileByBlob</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【平台文件下载】-1" tabindex="-1"><a class="header-anchor" href="#【平台文件下载】-1"><span>【平台文件下载】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">downloadFileByFileId</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">fileId</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token comment">//检查文件是否存在</span></span>\n<span class="line">  <span class="token keyword">const</span> aLink <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">  aLink<span class="token punctuation">.</span>style<span class="token punctuation">.</span>display <span class="token operator">=</span> <span class="token string">&#39;none&#39;</span></span>\n<span class="line">  <span class="token keyword">const</span> access_token <span class="token operator">=</span> localStorage<span class="token punctuation">.</span><span class="token function">getItem</span><span class="token punctuation">(</span><span class="token string">&#39;access_token&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">  <span class="token comment">// eslint-disable-next-line @typescript-eslint/ban-ts-comment</span></span>\n<span class="line">  <span class="token comment">// @ts-ignore</span></span>\n<span class="line">  <span class="token keyword">const</span> token <span class="token operator">=</span> access_token<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&#39;bearer &#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span></span>\n<span class="line">  aLink<span class="token punctuation">.</span>target <span class="token operator">=</span> <span class="token string">&#39;_blank&#39;</span></span>\n<span class="line">  aLink<span class="token punctuation">.</span>href <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/sun/file/downloadByFileId?fileId=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>fileId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;userCode=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>localStorage<span class="token punctuation">.</span>usercode<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&amp;access_token=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>token<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span>\n<span class="line">  document<span class="token punctuation">.</span>body<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>aLink<span class="token punctuation">)</span></span>\n<span class="line">  aLink<span class="token punctuation">.</span><span class="token function">click</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">  <span class="token constant">URL</span><span class="token punctuation">.</span><span class="token function">revokeObjectURL</span><span class="token punctuation">(</span>aLink<span class="token punctuation">.</span>href<span class="token punctuation">)</span></span>\n<span class="line">  aLink<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【监听事件】-1" tabindex="-1"><a class="header-anchor" href="#【监听事件】-1"><span>【监听事件】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">【<span class="token number">1</span>】注解方式</span>\n<span class="line"><span class="token comment">//immediate: true</span></span>\n<span class="line"><span class="token comment">//this.$set(this.formModel, fieldNameBgh, fieldValue)</span></span>\n<span class="line">@<span class="token function">Watch</span><span class="token punctuation">(</span><span class="token string">&#39;formModel&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">private</span> <span class="token function">fillBackModifyInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>formData<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>bghnr <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formModel<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">【<span class="token number">2</span>】Watcher only accepts simple dot<span class="token operator">-</span>delimited问题</span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$watch</span><span class="token punctuation">(</span></span>\n<span class="line">    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// 第一个函数就是处理你要监听的属性，只要将其return出去就行</span></span>\n<span class="line">        <span class="token keyword">return</span> data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>sub_xmxxbg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>F_xmfl</span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newVal<span class="token punctuation">,</span> oldVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">//... your code</span></span>\n<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>sub_xmxxbg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>F_zczd<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>sub_xmxxbg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>F_xmfl <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>newVal<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>sub_xmxxbg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>F_zczd<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span></span>\n<span class="line">          data<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>sub_xmxxbg<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>F_zczd <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">)</span></span>\n<span class="line">【<span class="token number">3</span>】</span>\n<span class="line"><span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">num</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">debugger</span></span>\n<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">.</span>approvalPosts <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>activeName <span class="token operator">=</span> <span class="token string">&#39;approval&#39;</span></span>\n<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">.</span>assignPosts <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>activeName <span class="token operator">=</span> <span class="token string">&#39;assign&#39;</span></span>\n<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>newVal<span class="token punctuation">.</span>submitPosts <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>activeName <span class="token operator">=</span> <span class="token string">&#39;submit&#39;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token literal-property property">deep</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token literal-property property">immediate</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token function">inputVal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">numberBlur</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token function">isExpanded</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>codeArea<span class="token punctuation">.</span>style<span class="token punctuation">.</span>height <span class="token operator">=</span> val <span class="token operator">?</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span><span class="token keyword">this</span><span class="token punctuation">.</span>codeAreaHeight <span class="token operator">+</span> <span class="token number">1</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">px</span><span class="token template-punctuation string">`</span></span> <span class="token operator">:</span> <span class="token string">&#39;0&#39;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">filter</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token function">handler</span><span class="token punctuation">(</span><span class="token parameter">newVal</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">let</span> _t <span class="token operator">=</span> newVal<span class="token punctuation">.</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token function">status</span><span class="token punctuation">(</span><span class="token parameter">newStatus<span class="token punctuation">,</span> oldStatus</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>oldStatus <span class="token operator">&amp;&amp;</span> newStatus <span class="token operator">===</span> <span class="token string">&#39;uploading&#39;</span> <span class="token operator">&amp;&amp;</span> oldStatus <span class="token operator">!==</span> <span class="token string">&#39;uploading&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>tid <span class="token operator">=</span> <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">          <span class="token keyword">this</span><span class="token punctuation">.</span>progressingClass <span class="token operator">=</span> <span class="token string">&#39;uploader-file-progressing&#39;</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">)</span></span>\n<span class="line">      <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【自定义组件传值传参】" tabindex="-1"><a class="header-anchor" href="#【自定义组件传值传参】"><span>【自定义组件传值传参】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">@<span class="token function">Prop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">private</span> formData<span class="token operator">!</span><span class="token operator">:</span> any</span>\n<span class="line"></span>\n<span class="line">@<span class="token function">Prop</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">private</span> selfDefinedParams<span class="token operator">!</span><span class="token operator">:</span> any</span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>bglx</span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>formData<span class="token punctuation">.</span>xmbgsqb<span class="token punctuation">.</span>bgqnr <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formModel<span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【修改所在表单数据】" tabindex="-1"><a class="header-anchor" href="#【修改所在表单数据】"><span>【修改所在表单数据】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> utils <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/utils&#39;</span></span>\n<span class="line"><span class="token keyword">let</span> formVm <span class="token operator">=</span> utils<span class="token punctuation">.</span><span class="token function">getOnlineFormInstance</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span></span>\n<span class="line">selected<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">item</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">  formVm<span class="token punctuation">.</span>data<span class="token punctuation">.</span>wzfysqb<span class="token punctuation">.</span>sub_wzfyqdb<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>formVm<span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【更新对象字段】" tabindex="-1"><a class="header-anchor" href="#【更新对象字段】"><span>【更新对象字段】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$set</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>formModel<span class="token punctuation">,</span> fieldName<span class="token punctuation">,</span> fieldValue<span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="【更新父组件属性】" tabindex="-1"><a class="header-anchor" href="#【更新父组件属性】"><span>【更新父组件属性】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">父</span>\n<span class="line"><span class="token operator">&lt;</span>tabulation<span class="token operator">-</span>view <span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> <span class="token operator">:</span>whfl<span class="token operator">=</span><span class="token string">&quot;whfl&quot;</span> v<span class="token operator">-</span><span class="token keyword">else</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>tabulation<span class="token operator">-</span>view<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token operator">&lt;</span>rankinglist<span class="token operator">-</span>view <span class="token operator">:</span>name<span class="token operator">=</span><span class="token string">&quot;text&quot;</span> <span class="token operator">:</span>whfl<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">&quot;whfl&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>rankinglist<span class="token operator">-</span>view<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token literal-property property">whfl</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">子<span class="token number">1</span></span>\n<span class="line"><span class="token function">selectWhfl</span><span class="token punctuation">(</span><span class="token parameter">whfl</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$emit</span><span class="token punctuation">(</span><span class="token string">&#39;update:whfl&#39;</span><span class="token punctuation">,</span> whfl<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">子<span class="token number">2</span></span>\n<span class="line"><span class="token literal-property property">watch</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">whfl</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token function">handler</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token function">alert</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>whfl<span class="token punctuation">)</span></span>\n<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【重写样式-v-deep】" tabindex="-1"><a class="header-anchor" href="#【重写样式-v-deep】"><span>【重写样式，v-deep】</span></a></h4><div class="language-scss line-numbers-mode" data-highlighter="prismjs" data-ext="scss" data-title="scss"><pre class="language-scss"><code><span class="line"><span class="token selector">&lt;style lang=&quot;scss&quot; scoped&gt;</span>\n<span class="line">.myTimeline ::v-deep </span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token selector">.el-timeline-item__timestamp </span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token property">color</span><span class="token punctuation">:</span> #303133<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token property">font-size</span><span class="token punctuation">:</span> 14px<span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token selector">.myImgPoolClas /deep/ .el-image__inner</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token property">object-fit</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token selector">.myImgPoolClas &gt;&gt;&gt; .el-image__inner</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token property">object-fit</span><span class="token punctuation">:</span> contain<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">&lt;/style&gt;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【css高度计算】" tabindex="-1"><a class="header-anchor" href="#【css高度计算】"><span>【css高度计算】</span></a></h4><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.gantt_instance_height</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100% - 110px<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token selector">.gantt_instance_height_full</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token property">height</span><span class="token punctuation">:</span> <span class="token function">calc</span><span class="token punctuation">(</span>100vh - 201px<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token property">vh</span><span class="token punctuation">:</span> 相对于视窗的高度<span class="token punctuation">,</span> 视窗被均分为100单位的vh<span class="token punctuation">;</span></span>\n<span class="line"><span class="token property">vw</span><span class="token punctuation">:</span> 相对于视窗的宽度<span class="token punctuation">,</span> 视窗被均分为100单位的vw<span class="token punctuation">;</span></span>\n<span class="line"><span class="token property">vmax</span><span class="token punctuation">:</span> 相对于视窗的宽度或高度中较大的那个。其中最大的那个被均分为100单位的vmax<span class="token punctuation">;</span></span>\n<span class="line"><span class="token property">vmin</span><span class="token punctuation">:</span> 相对于视窗的宽度或高度中较小的那个。其中最小的那个被均分为100单位的vmin<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【输入框不能输入问题】" tabindex="-1"><a class="header-anchor" href="#【输入框不能输入问题】"><span>【输入框不能输入问题】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token operator">&lt;</span>el<span class="token operator">-</span>input v<span class="token operator">-</span>model<span class="token operator">=</span><span class="token string">&quot;formModel.xmmcBgh&quot;</span> @input<span class="token operator">=</span><span class="token string">&quot;$forceUpdate()&quot;</span><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>el<span class="token operator">-</span>input<span class="token operator">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="【路由中传过滤参数】" tabindex="-1"><a class="header-anchor" href="#【路由中传过滤参数】"><span>【路由中传过滤参数】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">//index.ts</span></span>\n<span class="line"><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/dataTemplate/preview/:templateKey/:customQueryParams?&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;DbomDataTemplatePreview&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token function-variable function">props</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">route</span><span class="token operator">:</span> Route</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token keyword">return</span> <span class="token punctuation">{</span> <span class="token operator">...</span>route<span class="token punctuation">.</span>query<span class="token punctuation">,</span> <span class="token operator">...</span>route<span class="token punctuation">.</span>params <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token function-variable function">component</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">import</span><span class="token punctuation">(</span><span class="token string">&#39;@ibms/form/views/dataTemplate/preview.vue&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">(</span><span class="token operator">/</span>dataTemplate<span class="token operator">/</span>preview<span class="token operator">/</span>test<span class="token operator">/</span>F_mc<span class="token operator">=</span><span class="token string">&#39;test&#39;</span> and F_status<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【路由中参数获取】" tabindex="-1"><a class="header-anchor" href="#【路由中参数获取】"><span>【路由中参数获取】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>typeAlias</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="【路由跳转】" tabindex="-1"><a class="header-anchor" href="#【路由跳转】"><span>【路由跳转】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">private</span> <span class="token function">customEvent</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">routerPath</span><span class="token operator">:</span> string<span class="token punctuation">,</span> <span class="token literal-property property">title</span><span class="token operator">:</span> string</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> routerPath<span class="token punctuation">,</span></span>\n<span class="line">        <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">tabTitle</span><span class="token operator">:</span> title <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"># 其他参考</span>\n<span class="line">_this<span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/childRouterProject&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">query</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">tabTitle</span><span class="token operator">:</span> <span class="token string">&#39;嵌套路由_项目&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【关闭当前tab并跳转路由】" tabindex="-1"><a class="header-anchor" href="#【关闭当前tab并跳转路由】"><span>【关闭当前Tab并跳转路由】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">private</span> <span class="token function">closeCurTab</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">// 关闭tab</span></span>\n<span class="line">    TagsViewModule<span class="token punctuation">.</span><span class="token function">delVisitedTags</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">)</span></span>\n<span class="line">    <span class="token comment">// 跳转至指定tab</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>$router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">path</span><span class="token operator">:</span> <span class="token string">&#39;/index&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【静态资源引用】" tabindex="-1"><a class="header-anchor" href="#【静态资源引用】"><span>【静态资源引用】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token operator">&lt;</span>img style<span class="token operator">=</span><span class="token string">&quot;margin-left: 10px; width: 85%; height: 100%&quot;</span> src<span class="token operator">=</span><span class="token string">&quot;@/assets/images/project/default_image_male.jpg&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span></span>\n<span class="line"><span class="token keyword">import</span> FormPreview <span class="token keyword">from</span> <span class="token string">&#39;@ibms/form/views/dataTemplate/FormPreview.vue&#39;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> <span class="token constant">CLIENT_NUM</span> <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/consts&#39;</span></span>\n<span class="line"><span class="token keyword">import</span> StartList <span class="token keyword">from</span> <span class="token string">&#39;./headerComponents/StartList&#39;</span></span>\n<span class="line"><span class="token keyword">import</span> StartFlow <span class="token keyword">from</span> <span class="token string">&#39;@ibms/bpmn/components/StartFlow&#39;</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> getById <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;@/api/projectInfo&#39;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【div中元素居中】" tabindex="-1"><a class="header-anchor" href="#【div中元素居中】"><span>【div中元素居中】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;flex-container&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;centered-content&quot;</span><span class="token operator">&gt;</span>居中内容<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token punctuation">.</span>flex<span class="token operator">-</span>container <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">display</span><span class="token operator">:</span> flex<span class="token punctuation">;</span></span>\n<span class="line">  justify<span class="token operator">-</span>content<span class="token operator">:</span> center<span class="token punctuation">;</span></span>\n<span class="line">  align<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span></span>\n<span class="line">  <span class="token literal-property property">height</span><span class="token operator">:</span> 100vh<span class="token punctuation">;</span> <span class="token comment">/* 或者其他高度 */</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;grid-container&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">&quot;centered-content&quot;</span><span class="token operator">&gt;</span>居中内容<span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token punctuation">.</span>grid<span class="token operator">-</span>container <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">display</span><span class="token operator">:</span> grid<span class="token punctuation">;</span></span>\n<span class="line">  place<span class="token operator">-</span>items<span class="token operator">:</span> center<span class="token punctuation">;</span></span>\n<span class="line">  <span class="token literal-property property">height</span><span class="token operator">:</span> 100vh<span class="token punctuation">;</span> <span class="token comment">/* 或者其他高度 */</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【div内文字换行】" tabindex="-1"><a class="header-anchor" href="#【div内文字换行】"><span>【div内文字换行】</span></a></h4><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span></span>\n<span class="line"><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>\n<span class="line"><span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span></span>\n<span class="line"><span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【前端数组过滤】" tabindex="-1"><a class="header-anchor" href="#【前端数组过滤】"><span>【前端数组过滤】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">private</span> <span class="token function">getBz</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">lx</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">let</span> <span class="token literal-property property">bz1List</span><span class="token operator">:</span> any <span class="token operator">=</span></span>\n<span class="line">      <span class="token keyword">this</span><span class="token punctuation">.</span>formData<span class="token punctuation">.</span>wzcktpb<span class="token punctuation">.</span>sub_wzckjjb<span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span></span>\n<span class="line">        <span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">item</span><span class="token operator">:</span> any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> lx <span class="token operator">===</span> item<span class="token punctuation">.</span>wzlb</span>\n<span class="line">      <span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">[</span><span class="token punctuation">]</span></span>\n<span class="line">    <span class="token keyword">return</span> bz1List<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>bz</span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【原生ajax请求】" tabindex="-1"><a class="header-anchor" href="#【原生ajax请求】"><span>【原生ajax请求】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">xhr<span class="token punctuation">.</span>withCredentials <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line">xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">&#39;POST&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sun/official/myUtil/insertSignImgs&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">&#39;Authorization&#39;</span><span class="token punctuation">,</span> localStorage<span class="token punctuation">.</span>access_token<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">xhr<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">var</span> json</span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">403</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token function">failure</span><span class="token punctuation">(</span><span class="token string">&#39;HTTP Error: &#39;</span> <span class="token operator">+</span> xhr<span class="token punctuation">.</span>status<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">remove</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line">      <span class="token keyword">return</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">&lt;</span> <span class="token number">200</span> <span class="token operator">||</span> xhr<span class="token punctuation">.</span>status <span class="token operator">&gt;=</span> <span class="token number">300</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token function">failure</span><span class="token punctuation">(</span><span class="token string">&#39;HTTP Error: &#39;</span> <span class="token operator">+</span> xhr<span class="token punctuation">.</span>status<span class="token punctuation">)</span></span>\n<span class="line">      <span class="token keyword">return</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    json <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">xhr<span class="token punctuation">.</span><span class="token function-variable function">onerror</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token function">failure</span><span class="token punctuation">(</span></span>\n<span class="line">      <span class="token string">&#39;Image upload failed due to a XHR Transport error. Code: &#39;</span> <span class="token operator">+</span></span>\n<span class="line">        xhr<span class="token punctuation">.</span>status</span>\n<span class="line">    <span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">let</span> formData <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FormData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;fileId&#39;</span><span class="token punctuation">,</span> fileId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">formData<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span><span class="token string">&#39;signImgIds&#39;</span><span class="token punctuation">,</span> signImgIds<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>formData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【禁止右击】" tabindex="-1"><a class="header-anchor" href="#【禁止右击】"><span>【禁止右击】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">document<span class="token punctuation">.</span><span class="token function-variable function">oncontextmenu</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  event<span class="token punctuation">.</span>returnValue <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【明细表单路由】" tabindex="-1"><a class="header-anchor" href="#【明细表单路由】"><span>【明细表单路由】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">/ibms-712S-daily/dataTemplate/FormPreview/jswjlblb/ibms-712S-daily/detail/true/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>item<span class="token punctuation">.</span>id<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token template-punctuation string">`</span></span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="【流程监控组件】" tabindex="-1"><a class="header-anchor" href="#【流程监控组件】"><span>【流程监控组件】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// 数据 id</span></span>\n<span class="line">_this<span class="token punctuation">.</span>dataId <span class="token operator">=</span> id</span>\n<span class="line"><span class="token comment">// 流程定义Key</span></span>\n<span class="line">_this<span class="token punctuation">.</span>flowKey <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>\n<span class="line"><span class="token comment">// 显示流程监控对话框</span></span>\n<span class="line">_this<span class="token punctuation">.</span>processMonitorVisible <span class="token operator">=</span> <span class="token boolean">true</span></span>\n<span class="line"></span>\n<span class="line"><span class="token operator">&lt;</span>process<span class="token operator">-</span>monitor</span>\n<span class="line">  v<span class="token operator">-</span><span class="token keyword">if</span><span class="token operator">=</span><span class="token string">&quot;processMonitorVisible&quot;</span></span>\n<span class="line">  <span class="token operator">:</span>visible<span class="token punctuation">.</span>sync<span class="token operator">=</span><span class="token string">&quot;processMonitorVisible&quot;</span></span>\n<span class="line">  <span class="token operator">:</span>data<span class="token operator">-</span>id<span class="token operator">=</span><span class="token string">&quot;rowId&quot;</span></span>\n<span class="line">  <span class="token operator">:</span>flow<span class="token operator">-</span>id<span class="token operator">=</span><span class="token string">&quot;flowId&quot;</span></span>\n<span class="line"><span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>process<span class="token operator">-</span>monitor<span class="token operator">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-5-前端工具类" tabindex="-1"><a class="header-anchor" href="#_1-5-前端工具类"><span>1.5 前端工具类</span></a></h3><h4 id="【财务工具类参考】" tabindex="-1"><a class="header-anchor" href="#【财务工具类参考】"><span>【财务工具类参考】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_this<span class="token punctuation">.</span>templateInfo<span class="token punctuation">.</span>defId <span class="token operator">=</span> <span class="token string">&#39;wzwlcksqlc&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">_this<span class="token punctuation">.</span>$Finance<span class="token punctuation">.</span><span class="token function">openDetail</span><span class="token punctuation">(</span>_this<span class="token punctuation">,</span> _row<span class="token punctuation">.</span><span class="token constant">F_SQDID</span><span class="token punctuation">,</span> _row<span class="token punctuation">.</span><span class="token constant">F_OAID</span><span class="token punctuation">,</span> _row<span class="token punctuation">.</span><span class="token constant">F_OAURL</span> <span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-6-备忘录" tabindex="-1"><a class="header-anchor" href="#_1-6-备忘录"><span>1.6 备忘录</span></a></h3><h4 id="【yum源设置】" tabindex="-1"><a class="header-anchor" href="#【yum源设置】"><span>【yum源设置】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">yarn config <span class="token keyword">set</span> registry http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.81</span><span class="token operator">:</span><span class="token number">9999</span><span class="token operator">/</span>repository<span class="token operator">/</span>npm<span class="token operator">-</span><span class="token keyword">public</span><span class="token operator">/</span></span>\n<span class="line">npm config <span class="token keyword">set</span> registry http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.3</span><span class="token number">.81</span><span class="token operator">:</span><span class="token number">9999</span><span class="token operator">/</span>repository<span class="token operator">/</span>npm<span class="token operator">-</span><span class="token keyword">public</span><span class="token operator">/</span></span>\n<span class="line">yarn remove @ibms<span class="token operator">/</span>assist @ibms<span class="token operator">/</span>bpmn @ibms<span class="token operator">/</span>demo @ibms<span class="token operator">/</span>file @ibms<span class="token operator">/</span>form @ibms<span class="token operator">/</span>mdm @ibms<span class="token operator">/</span>msg @ibms<span class="token operator">/</span>ops @ibms<span class="token operator">/</span>portal @ibms<span class="token operator">/</span>styles @ibms<span class="token operator">/</span>sys @ibms<span class="token operator">/</span>ui @ibms<span class="token operator">/</span>tools</span>\n<span class="line">yarn add @ibms<span class="token operator">/</span>assist@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>bpmn@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>demo@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>file@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>form@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>mdm@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>msg@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>ops@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>portal@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>styles@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>sys@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>ui@<span class="token number">3.1</span><span class="token number">.11</span> @ibms<span class="token operator">/</span>tools@<span class="token number">3.1</span><span class="token number">.11</span></span>\n<span class="line">yarn add @ibms<span class="token operator">/</span>assist@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>bpmn@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>demo@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>file@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>form@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>mdm@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>msg@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>ops@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>portal@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>styles@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>sys@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>ui@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>tools@<span class="token number">3.1</span><span class="token number">.12</span></span>\n<span class="line"></span>\n<span class="line">yarn remove @ibms<span class="token operator">/</span>form @ibms<span class="token operator">/</span>ui</span>\n<span class="line">yarn add @ibms<span class="token operator">/</span>form@<span class="token number">3.1</span><span class="token number">.12</span> @ibms<span class="token operator">/</span>ui@<span class="token number">3.1</span><span class="token number">.12</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"># 其他源设置</span>\n<span class="line">yarn config <span class="token keyword">set</span> registry http<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">registry.npm.taobao.org</span><span class="token regex-delimiter">/</span></span></span>\n<span class="line">npm config <span class="token keyword">set</span> registry http<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">registry.npm.taobao.org</span><span class="token regex-delimiter">/</span></span></span>\n<span class="line">yarn config <span class="token keyword">set</span> registry http<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">registry.npmjs.org</span><span class="token regex-delimiter">/</span></span></span>\n<span class="line">npm config <span class="token keyword">set</span> registry http<span class="token operator">:</span><span class="token operator">/</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">registry.npmjs.org</span><span class="token regex-delimiter">/</span></span></span>\n<span class="line">yarn install <span class="token operator">--</span>no<span class="token operator">-</span>lockfile</span>\n<span class="line">npm install sass<span class="token operator">-</span>loader sass <span class="token operator">--</span>save<span class="token operator">-</span>dev<span class="token operator">-</span>save</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【-message用法】" tabindex="-1"><a class="header-anchor" href="#【-message用法】"><span>【$message用法】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">_this<span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">center</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;表更新出错！&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;警告哦，这是一条警告消息&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token string">&#39;这是一条消息提示&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;恭喜你，这是一条成功消息&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;success&#39;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">&#39;错了哦，这是一条错误消息&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">  <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&#39;恭喜你，这是一条警告消息&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token literal-property property">duration</span><span class="token operator">:</span> <span class="token number">0</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span>$message<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">$message</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;warning&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">dangerouslyUseHTMLString</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">message</span><span class="token operator">:</span> errMsg<span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【replaceall-is-not-a-function】" tabindex="-1"><a class="header-anchor" href="#【replaceall-is-not-a-function】"><span>【replaceAll is not a function】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">yqhtbh <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token operator">!</span>yqhtbh<span class="token operator">?</span> yqhtbh<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;gm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;&#39;,&#39;&quot;</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * 不用正则的方式替换所有值</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">text</span> 被替换的字符串</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">checker</span>  替换前的内容</span>\n<span class="line"> * <span class="token keyword">@param</span> <span class="token parameter">replacer</span> 替换后的内容</span>\n<span class="line"> * <span class="token keyword">@returns</span> <span class="token class-name"><span class="token punctuation">{</span>String<span class="token punctuation">}</span></span> 替换后的字符串</span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">replaceAll</span><span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> checker<span class="token punctuation">,</span> replacer</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">let</span> lastText <span class="token operator">=</span> text</span>\n<span class="line">  text <span class="token operator">=</span> text<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>checker<span class="token punctuation">,</span> replacer<span class="token punctuation">)</span></span>\n<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>lastText <span class="token operator">!==</span> text<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token function">replaceAll</span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> checker<span class="token punctuation">,</span> replacer<span class="token punctuation">)</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line">  <span class="token keyword">return</span> text</span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【js遍历对象属性】" tabindex="-1"><a class="header-anchor" href="#【js遍历对象属性】"><span>【js遍历对象属性】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line">Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">item</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    data<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">app</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">      app<span class="token punctuation">.</span>icon <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>app<span class="token punctuation">.</span>yytb<span class="token punctuation">)</span></span>\n<span class="line">      app<span class="token punctuation">.</span>image <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">@ibms/demo/docs/images/guide/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">${</span>app<span class="token punctuation">.</span>icon<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">)</span></span>\n<span class="line">      app<span class="token punctuation">.</span>imageColor <span class="token operator">=</span> app<span class="token punctuation">.</span>icon<span class="token punctuation">.</span>color</span>\n<span class="line">      app<span class="token punctuation">.</span>name <span class="token operator">=</span> app<span class="token punctuation">.</span>yymc</span>\n<span class="line">      app<span class="token punctuation">.</span>draggable <span class="token operator">=</span> <span class="token boolean">true</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【过滤数组元素、复制对象属性】" tabindex="-1"><a class="header-anchor" href="#【过滤数组元素、复制对象属性】"><span>【过滤数组元素、复制对象属性】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token literal-property property">meetingRoomData</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token keyword">let</span> rid <span class="token operator">=</span> ev<span class="token punctuation">.</span>roomId</span>\n<span class="line"><span class="token keyword">let</span> <span class="token punctuation">{</span></span>\n<span class="line">    manager_code<span class="token punctuation">,</span></span>\n<span class="line">    manager_name<span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">label</span><span class="token operator">:</span> name<span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>meetingRoomData<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> key <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> key <span class="token operator">==</span> rid<span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">let</span> par <span class="token operator">=</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token literal-property property">startTime</span><span class="token operator">:</span> <span class="token function">formatFunc</span><span class="token punctuation">(</span>start<span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">endTime</span><span class="token operator">:</span> <span class="token function">formatFunc</span><span class="token punctuation">(</span>end<span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">roomName</span><span class="token operator">:</span> name<span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">managerCode</span><span class="token operator">:</span> manager_code<span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">managerName</span><span class="token operator">:</span> manager_name<span class="token punctuation">,</span></span>\n<span class="line">    <span class="token literal-property property">roomId</span><span class="token operator">:</span> rid<span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">Object<span class="token punctuation">.</span><span class="token function">assign</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">,</span> par<span class="token punctuation">)</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【插入到数组起始位置】" tabindex="-1"><a class="header-anchor" href="#【插入到数组起始位置】"><span>【插入到数组起始位置】</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">var fruits = [&quot;Banana&quot;, &quot;Orange&quot;, &quot;Apple&quot;, &quot;Mango&quot;];</span>\n<span class="line">fruits.unshift(&quot;Lemon&quot;,&quot;Pineapple&quot;);//Lemon,Pineapple,Banana,Orange,Apple,Mango</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【div中图片上下左右居中】" tabindex="-1"><a class="header-anchor" href="#【div中图片上下左右居中】"><span>【div中图片上下左右居中】</span></a></h4><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">div</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token property">width</span><span class="token punctuation">:</span> 0.48rem<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token property">height</span><span class="token punctuation">:</span> 0.48rem<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token property">border-radius</span><span class="token punctuation">:</span> 0.12rem<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token property">transition</span><span class="token punctuation">:</span> all 0.6s ease 0s<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token selector">img</span> <span class="token punctuation">{</span></span>\n<span class="line">      <span class="token property">width</span><span class="token punctuation">:</span> 0.28rem<span class="token punctuation">;</span></span>\n<span class="line">      <span class="token property">height</span><span class="token punctuation">:</span> 0.28rem<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【省略号显示】" tabindex="-1"><a class="header-anchor" href="#【省略号显示】"><span>【省略号显示】</span></a></h4><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span></span>\n<span class="line"><span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span></span>\n<span class="line"><span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【定时任务setinterval】" tabindex="-1"><a class="header-anchor" href="#【定时任务setinterval】"><span>【定时任务setInterval】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">let</span> intervalVariable <span class="token operator">=</span> <span class="token function">setInterval</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">if</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;form-title el-row&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>length<span class="token operator">&gt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    document<span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;form-title el-row&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getElementsByClassName</span><span class="token punctuation">(</span><span class="token string">&quot;el-col el-col-18&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">getElementsByTagName</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>innerHTML<span class="token operator">=</span>bdbt<span class="token punctuation">;</span></span>\n<span class="line">        <span class="token function">clearInterval</span><span class="token punctuation">(</span>intervalVariable<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">  <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【过渡组】" tabindex="-1"><a class="header-anchor" href="#【过渡组】"><span>【过渡组】</span></a></h4><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token literal-property property">http</span><span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>vue<span class="token punctuation">.</span>dragonlm<span class="token punctuation">.</span>com<span class="token operator">/</span>guide<span class="token operator">/</span>built<span class="token operator">-</span>ins<span class="token operator">/</span>transition<span class="token operator">-</span>group<span class="token punctuation">.</span>html#staggering<span class="token operator">-</span>list<span class="token operator">-</span>transitions</span>\n<span class="line"><span class="token operator">&lt;</span>TransitionGroup name<span class="token operator">=</span><span class="token string">&quot;list&quot;</span> tag<span class="token operator">=</span><span class="token string">&quot;ul&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">  <span class="token operator">&lt;</span>li v<span class="token operator">-</span><span class="token keyword">for</span><span class="token operator">=</span><span class="token string">&quot;item in items&quot;</span> <span class="token operator">:</span>key<span class="token operator">=</span><span class="token string">&quot;item&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">    <span class="token punctuation">{</span><span class="token punctuation">{</span> item <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n<span class="line">  <span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>TransitionGroup<span class="token operator">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【this-nexttick-】" tabindex="-1"><a class="header-anchor" href="#【this-nexttick-】"><span>【this.$nextTick()】</span></a></h4><div class="language-http line-numbers-mode" data-highlighter="prismjs" data-ext="http" data-title="http"><pre class="language-http"><code><span class="line"><span class="token header"><span class="token header-name keyword">https</span><span class="token punctuation">:</span><span class="token header-value">//blog.csdn.net/a654540233/article/details/107245152/</span></span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="_2-后端" tabindex="-1"><a class="header-anchor" href="#_2-后端"><span>2 后端</span></a></h2><h3 id="_2-1-功能框架" tabindex="-1"><a class="header-anchor" href="#_2-1-功能框架"><span>2.1 功能框架</span></a></h3><h4 id="【导入模板下载】" tabindex="-1"><a class="header-anchor" href="#【导入模板下载】"><span>【导入模板下载】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;任务表导入模板下载&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;downLoadProjectPlan&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@ResourceMethod</span><span class="token punctuation">(</span>methodName <span class="token operator">=</span> <span class="token string">&quot;任务表导入模板下载&quot;</span><span class="token punctuation">,</span> permission <span class="token operator">=</span> <span class="token class-name">PermissionType</span><span class="token punctuation">.</span><span class="token constant">PRIVATE</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@QueryLog</span><span class="token punctuation">(</span>detail <span class="token operator">=</span> <span class="token string">&quot;&#39;下载了&#39;+#moduleName+&#39;导入模板，文件名称为【&#39;+#fileName+&#39;】&#39;&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@ApiImplicitParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;fileName&quot;</span><span class="token punctuation">,</span> value <span class="token operator">=</span> <span class="token string">&quot;文件名&quot;</span><span class="token punctuation">,</span> paramType <span class="token operator">=</span> <span class="token string">&quot;query&quot;</span><span class="token punctuation">,</span> required <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">,</span> dataType <span class="token operator">=</span> <span class="token string">&quot;String&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downLoadProjectPlan</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;fileName&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span>manager<span class="token punctuation">.</span><span class="token function">downLoadProjectPlan</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span>request<span class="token punctuation">,</span>response<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token annotation punctuation">@Override</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downLoadProjectPlan</span><span class="token punctuation">(</span><span class="token class-name">String</span> fileName<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Allow-Origin&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;*&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Access-Control-Expose-Headers&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        response<span class="token punctuation">.</span><span class="token function">setHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;attachment; filename=&quot;</span> <span class="token operator">+</span> <span class="token class-name">URLEncoder</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">&quot;application/octet-stream; charset=UTF-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;项目计划导入模板.xlsx&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProjectPlan</span><span class="token punctuation">&gt;</span></span> exportProjectPlanList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">EasyExcel</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token class-name">ProjectPlan</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>\n<span class="line">                        <span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token string">&quot;任务表&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">doWrite</span><span class="token punctuation">(</span>exportProjectPlanList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;项目计划导入模板.mpp&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>fileName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token class-name">ClassPathResource</span> classPathResource <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ClassPathResource</span><span class="token punctuation">(</span><span class="token string">&quot;template&quot;</span><span class="token operator">+</span> <span class="token class-name">File</span><span class="token punctuation">.</span>separator<span class="token operator">+</span>fileName<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">InputStream</span> input <span class="token operator">=</span> classPathResource<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">ServletOutputStream</span> ouputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">writeInput</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span>ouputStream<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            ouputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            ouputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【自定义对话框-rest接口】" tabindex="-1"><a class="header-anchor" href="#【自定义对话框-rest接口】"><span>【自定义对话框，REST接口】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;获取套红模板选择数据&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">&quot;getTaoHongTemplateList&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@ResourceMethod</span><span class="token punctuation">(</span>methodName <span class="token operator">=</span> <span class="token string">&quot;获取套红模板选择数据&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">PageJson</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTaoHongTemplateList</span><span class="token punctuation">(</span><span class="token class-name">QueryBean</span> queryBean<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>manager<span class="token punctuation">.</span><span class="token function">getTaoHongTemplateList</span><span class="token punctuation">(</span>queryBean<span class="token punctuation">.</span><span class="token function">getFieldLogic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">PageJson</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getTaoHongTemplateList</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">String</span> mbmc <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$F_MBMC$SL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//模板名称</span></span>\n<span class="line">    <span class="token class-name">String</span> wjz <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$F_WJZ$S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//文件字</span></span>\n<span class="line">    <span class="token class-name">PageJson</span> pageJson <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageJson</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">PageResult</span> pageResult <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageResult</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    pageResult<span class="token punctuation">.</span><span class="token function">setTotalCount</span><span class="token punctuation">(</span>dataList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    pageJson<span class="token punctuation">.</span><span class="token function">setPageResult</span><span class="token punctuation">(</span>pageResult<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    pageJson<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> pageJson<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;库房库位物资选择&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span><span class="token string">&quot;getStorageDataList&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@ResourceMethod</span><span class="token punctuation">(</span>methodName <span class="token operator">=</span> <span class="token string">&quot;库房库位物资选择&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">PageJson</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getStorageDataList</span><span class="token punctuation">(</span><span class="token class-name">QueryBean</span> queryBean<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>manager<span class="token punctuation">.</span><span class="token function">getStorageDataList</span><span class="token punctuation">(</span>queryBean<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token annotation punctuation">@Override</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">PageJson</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getStorageDataList</span><span class="token punctuation">(</span><span class="token class-name">QueryBean</span> queryBean<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">//查询字段</span></span>\n<span class="line">    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> queryBean<span class="token punctuation">.</span><span class="token function">getFieldLogic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">String</span> wzbm <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$wzbm$SL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//物资编码</span></span>\n<span class="line">    <span class="token class-name">String</span> wzmc <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$wzmc$SL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//物资名称</span></span>\n<span class="line">    <span class="token class-name">String</span> kfbh <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$kfbh$SL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//库房编号</span></span>\n<span class="line">    <span class="token class-name">String</span> kwbh <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$kwbh$SL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//库位编号</span></span>\n<span class="line">    <span class="token class-name">String</span> zdsjl <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$zdsjl$EQ&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//最大数据量</span></span>\n<span class="line">    <span class="token class-name">String</span> kclx <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$kclx$S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//库存标识</span></span>\n<span class="line">    <span class="token class-name">String</span> kcqdIds <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$kcqdIds$S&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//库存清单IDs</span></span>\n<span class="line">    <span class="token class-name">String</span> rshgzbhParam <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$rshgzbh$SL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//合格证编号</span></span>\n<span class="line">    <span class="token class-name">String</span> cgsqdhParam <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$cgsqdh$SL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//采购申请单号</span></span>\n<span class="line">    <span class="token class-name">String</span> ktbhParam <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$ktbh$SL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//课题本号</span></span>\n<span class="line">    <span class="token class-name">String</span> fyhgzbh <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;Q$fyhgzbh$SL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//课题本号</span></span>\n<span class="line">    <span class="token class-name">String</span> filterSql <span class="token operator">=</span> <span class="token string">&quot; NVL(T1.F_WZBM,&#39;&#39;) LIKE &#39;%&quot;</span> <span class="token operator">+</span> wzbm <span class="token operator">+</span> <span class="token string">&quot;%&#39; AND NVL(T1.F_WZMC,&#39;&#39;) LIKE &#39;%&quot;</span> <span class="token operator">+</span> wzmc <span class="token operator">+</span> <span class="token string">&quot;%&#39; &quot;</span> <span class="token operator">+</span></span>\n<span class="line">            <span class="token string">&quot;AND NVL(T1.F_KFBH,&#39;&#39;) LIKE &#39;%&quot;</span> <span class="token operator">+</span> kfbh <span class="token operator">+</span> <span class="token string">&quot;%&#39; AND NVL(T1.F_KWBH,&#39;&#39;) LIKE &#39;%&quot;</span> <span class="token operator">+</span> kwbh <span class="token operator">+</span> <span class="token string">&quot;%&#39;AND NVL(T1.F_FYHGZBH,&#39;&#39;) LIKE &#39;%&quot;</span> <span class="token operator">+</span> fyhgzbh <span class="token operator">+</span> <span class="token string">&quot;%&#39; &quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>kcqdIds<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">String</span> idFilter <span class="token operator">=</span> <span class="token class-name">MyStringUtil</span><span class="token punctuation">.</span><span class="token function">getFilterSql</span><span class="token punctuation">(</span>item<span class="token operator">-&gt;</span><span class="token string">&quot;T1.ID_!=&#39;&quot;</span><span class="token operator">+</span>item<span class="token operator">+</span><span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">,</span> <span class="token class-name">MyStringUtil</span><span class="token punctuation">.</span><span class="token function">toSet</span><span class="token punctuation">(</span>kcqdIds<span class="token punctuation">,</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        filterSql <span class="token operator">+=</span> idFilter<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;OR&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;AND&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token class-name">String</span> querySql <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">String</span> ordeySql <span class="token operator">=</span> <span class="token string">&quot;ORDER BY T1.F_KFBH DESC,T1.F_KWBH DESC,T1.F_WZBM DESC&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token comment">/*if(StringUtil.isEmpty(zdsjl)){</span>\n<span class="line">        zdsjl = &quot;1000&quot;;</span>\n<span class="line">    }*/</span></span>\n<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> resList <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> dataList <span class="token operator">=</span> jdbcTemplate<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span><span class="token class-name">MyJdbcUtil</span><span class="token punctuation">.</span><span class="token function">getPageSql</span><span class="token punctuation">(</span>querySql<span class="token punctuation">,</span>queryBean<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CommonTools</span><span class="token punctuation">.</span><span class="token function">isNotEmptyList</span><span class="token punctuation">(</span>dataList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> dataMap <span class="token operator">:</span> dataList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> resMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">String</span> id_ <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>dataMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;ID_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//库存ID</span></span>\n<span class="line">            resMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;id_&quot;</span><span class="token punctuation">,</span>id_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//对话框主键</span></span>\n<span class="line">            resMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;mj&quot;</span><span class="token punctuation">,</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>dataMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;F_MJ&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//密级</span></span>\n<span class="line">            resMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;kf&quot;</span><span class="token punctuation">,</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>dataMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;F_KF&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//库房</span></span>\n<span class="line">            resMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;kw&quot;</span><span class="token punctuation">,</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>dataMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;F_KWBH&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//库位（货架）</span></span>\n<span class="line">            resMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;wzbm&quot;</span><span class="token punctuation">,</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>dataMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;F_WZBM&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//物资编码</span></span>\n<span class="line">            resMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;wzmc&quot;</span><span class="token punctuation">,</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>dataMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;F_WZMC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//物资名称</span></span>\n<span class="line">            resMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;ggxh&quot;</span><span class="token punctuation">,</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>dataMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;F_GGXH&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//规格型号</span></span>\n<span class="line">            resMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;dw&quot;</span><span class="token punctuation">,</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>dataMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;F_DW&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//单位</span></span>\n<span class="line">            resList<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>resMap<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token comment">//4.返回结果集</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token class-name">MyJdbcUtil</span><span class="token punctuation">.</span><span class="token function">getPageJson</span><span class="token punctuation">(</span>jdbcTemplate<span class="token punctuation">,</span>querySql<span class="token punctuation">,</span>resList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"># 树形<span class="token constant">REST</span></span>\n<span class="line"><span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span>\n<span class="line"></span>\n<span class="line">let fjmc <span class="token operator">=</span> _this<span class="token punctuation">.</span>queryParams<span class="token punctuation">.</span>fieldLogic<span class="token punctuation">.</span>Q$<span class="token class-name">F_fjmc</span>$<span class="token class-name">S</span><span class="token punctuation">;</span><span class="token comment">//父级名称</span></span>\n<span class="line">let fjid <span class="token operator">=</span> _this<span class="token punctuation">.</span>queryParams<span class="token punctuation">.</span>fieldLogic<span class="token punctuation">.</span>Q$<span class="token class-name">F_fjid</span>$<span class="token class-name">S</span><span class="token punctuation">;</span><span class="token comment">//父级ID</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>fjmc<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">  _this<span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>fjmc <span class="token operator">=</span> <span class="token char">&#39;全部&#39;</span><span class="token punctuation">;</span></span>\n<span class="line">  _this<span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>fjid <span class="token operator">=</span> <span class="token char">&#39;-1&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">  _this<span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>fjmc <span class="token operator">=</span> fjmc<span class="token punctuation">;</span></span>\n<span class="line">  _this<span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>fjid <span class="token operator">=</span> fjid<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span> </span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【脚本管理-参数接收】" tabindex="-1"><a class="header-anchor" href="#【脚本管理-参数接收】"><span>【脚本管理，参数接收】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">【<span class="token number">1</span>】body</span>\n<span class="line"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;团队变更流程结束事件&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;endTask_tdcysplc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@ResourceMethod</span><span class="token punctuation">(</span>methodName <span class="token operator">=</span> <span class="token string">&quot;团队变更流程结束事件&quot;</span><span class="token punctuation">,</span> permission <span class="token operator">=</span> <span class="token class-name">PermissionType</span><span class="token punctuation">.</span><span class="token constant">PRIVATE</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">endTaskApproval</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Impl</span><span class="token punctuation">.</span><span class="token function">endTaskApproval</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">【<span class="token number">2</span>】body</span>\n<span class="line"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;批量更新变更计划&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">&quot;batchUpdateChangeTask&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@ResourceMethod</span><span class="token punctuation">(</span>methodName <span class="token operator">=</span> <span class="token string">&quot;批量更新变更计划&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">batchUpdateChangeTask</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">JSONObject</span> params<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Impl</span><span class="token punctuation">.</span><span class="token function">batchUpdateChangeTask</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">【<span class="token number">3</span>】param</span>\n<span class="line"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;指南申报通知审批流程结束事件&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@PostMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;endTask_znsbtzlc&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@ResourceMethod</span><span class="token punctuation">(</span>methodName <span class="token operator">=</span> <span class="token string">&quot;指南申报通知审批流程结束事件&quot;</span><span class="token punctuation">,</span> permission <span class="token operator">=</span> <span class="token class-name">PermissionType</span><span class="token punctuation">.</span><span class="token constant">PRIVATE</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">&gt;</span></span> <span class="token function">endTask_znsbtzlc</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestBody</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> param<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">this<span class="token punctuation">.</span></span>Impl</span><span class="token punctuation">.</span><span class="token function">endTask_znsbtzlc</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">【<span class="token number">4</span>】spId param</span>\n<span class="line"><span class="token annotation punctuation">@ApiOperation</span><span class="token punctuation">(</span><span class="token string">&quot;获取破格任命申请书执行人&quot;</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">&quot;getBreakUserCodes&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token annotation punctuation">@ResourceMethod</span><span class="token punctuation">(</span>methodName <span class="token operator">=</span> <span class="token string">&quot;获取破格任命申请书执行人&quot;</span><span class="token punctuation">,</span> permission <span class="token operator">=</span> <span class="token class-name">PermissionType</span><span class="token punctuation">.</span><span class="token constant">PRIVATE</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> <span class="token function">getBreakUserCodes</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">&quot;spId&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> spId<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> userList <span class="token operator">=</span>  iwProcessExector<span class="token punctuation">.</span><span class="token function">getBreakUserCodes</span><span class="token punctuation">(</span>spId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>userList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【发送信息】" tabindex="-1"><a class="header-anchor" href="#【发送信息】"><span>【发送信息】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">InnerMsgSendService</span> innerMsgSendService<span class="token punctuation">;</span> <span class="token comment">// 消息发送服务</span></span>\n<span class="line"></span>\n<span class="line"><span class="token class-name">InnerMsgSend</span> innerMsgSend <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">InnerMsgSend</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 发送信息</span></span>\n<span class="line">innerMsgSend<span class="token punctuation">.</span><span class="token function">setSubject</span><span class="token punctuation">(</span><span class="token string">&quot;【 会议通知 】&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//标题（主题）</span></span>\n<span class="line">innerMsgSend<span class="token punctuation">.</span><span class="token function">setMsgContent</span><span class="token punctuation">(</span></span>\n<span class="line">        <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;任务预警,%s任务即将到期,请及时处理!&quot;</span><span class="token punctuation">,</span> x<span class="token punctuation">.</span><span class="token function">getRwmc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//消息内容</span></span>\n<span class="line">innerMsgSend<span class="token punctuation">.</span><span class="token function">setMsgSendTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//消息发送时间</span></span>\n<span class="line">innerMsgSend<span class="token punctuation">.</span><span class="token function">setMsgSendUserId</span><span class="token punctuation">(</span><span class="token string">&quot;admin&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//消息发送人员</span></span>\n<span class="line">innerMsgSend<span class="token punctuation">.</span><span class="token function">setMsgSendUserName</span><span class="token punctuation">(</span><span class="token string">&quot;系统实施人员&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">innerMsgSend<span class="token punctuation">.</span><span class="token function">setMsgReceiverId</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getZrrcode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//消息接收人员</span></span>\n<span class="line">innerMsgSend<span class="token punctuation">.</span><span class="token function">setMsgReceiverName</span><span class="token punctuation">(</span>x<span class="token punctuation">.</span><span class="token function">getZrr</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">innerMsgSend<span class="token punctuation">.</span><span class="token function">setClientNum</span><span class="token punctuation">(</span><span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">getClientNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//消息所属系统标识</span></span>\n<span class="line">innerMsgSendService<span class="token punctuation">.</span><span class="token function">saveMsgSend</span><span class="token punctuation">(</span>innerMsgSend<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用站内信发送消息接口</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【流水号获取】" tabindex="-1"><a class="header-anchor" href="#【流水号获取】"><span>【流水号获取】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">IFormIdentityService</span></span>\n<span class="line"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&quot;/form/identity/v1/getNextIdByAlias&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> <span class="token function">getNextIdByAlias</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;alias&quot;</span><span class="token punctuation">)</span> <span class="token class-name">String</span> var1<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span>name <span class="token operator">=</span> <span class="token string">&quot;clientNum&quot;</span><span class="token punctuation">,</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token class-name">String</span> var2<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token annotation punctuation">@Autowired</span><span class="token punctuation">(</span>required <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">private</span> <span class="token class-name">IFormRestService</span> formRestService<span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> versionType <span class="token operator">=</span> formRestService<span class="token punctuation">.</span><span class="token function">getFormIdentityNextIdByAlias</span><span class="token punctuation">(</span><span class="token string">&quot;xmwdlsh&quot;</span><span class="token punctuation">,</span> <span class="token class-name">HttpUtil</span><span class="token punctuation">.</span><span class="token function">getClientNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">projectDocument<span class="token punctuation">.</span><span class="token function">setBbbs</span><span class="token punctuation">(</span>versionType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【流程审批信息获取】" tabindex="-1"><a class="header-anchor" href="#【流程审批信息获取】"><span>【流程审批信息获取】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">//复验子流程，审批意见、审批时间</span></span>\n<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BpmCheckOpinion</span><span class="token punctuation">&gt;</span></span> opinionList <span class="token operator">=</span> bpmOpinionRestService<span class="token punctuation">.</span><span class="token function">opinionListByBusinessKeyAndDefKey</span><span class="token punctuation">(</span>sonId<span class="token punctuation">,</span> <span class="token string">&quot;rsfyzlc_sccpl&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>opinionList <span class="token operator">!=</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">BpmCheckOpinion</span> bpmCheckOpinion <span class="token operator">:</span> opinionList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">String</span> taskKey <span class="token operator">=</span> bpmCheckOpinion<span class="token punctuation">.</span><span class="token function">getTaskKey</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//获取任务节点</span></span>\n<span class="line">        <span class="token class-name">Date</span> <span class="token class-name">CompleteTime</span> <span class="token operator">=</span> bpmCheckOpinion<span class="token punctuation">.</span><span class="token function">getCompleteTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//完成时间</span></span>\n<span class="line">        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">&quot;UserTask_zUOj9Ts&quot;</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>taskKey<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token comment">//计量员</span></span>\n<span class="line">            jssj <span class="token operator">=</span> eFormat1<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">CompleteTime</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token class-name">OpinionController</span><span class="token operator">-</span>getOpinionList</span>\n<span class="line"><span class="token class-name">Clbx</span><span class="token punctuation">.</span>map<span class="token punctuation">.</span>xml<span class="token operator">-</span>get<span class="token operator">-</span><span class="token constant">PROJECT_BPM_PRO_INST</span><span class="token operator">-</span>business_key_ </span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【特定格式化日期获取】" tabindex="-1"><a class="header-anchor" href="#【特定格式化日期获取】"><span>【特定格式化日期获取】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">//获取本月、本季度的开始时间结束时间</span></span>\n<span class="line"><span class="token class-name">String</span> month_start <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span>dateFormatByYMD<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">getCurrentMonthStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> month_end <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span>dateFormatByYMD<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">getCurrentMonthEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> quart_start <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span>dateFormatByYMD<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">getCurrentQuarterStartTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> quart_end <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span>dateFormatByYMD<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">getCurrentQuarterEndTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【平台文件复制更新】" tabindex="-1"><a class="header-anchor" href="#【平台文件复制更新】"><span>【平台文件复制更新】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">【文件复制】</span>\n<span class="line"><span class="token class-name">SunFile</span> sunFile <span class="token operator">=</span> fileManageService<span class="token punctuation">.</span><span class="token function">getFile</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>fileId<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">//复制模板记录</span></span>\n<span class="line"><span class="token class-name">String</span> newFileId <span class="token operator">=</span> <span class="token class-name">UniqueIdUtil</span><span class="token punctuation">.</span><span class="token function">getUniqueIdString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> newFileName <span class="token operator">=</span> newFileId<span class="token operator">+</span><span class="token string">&quot;_&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> newStorageName <span class="token operator">=</span> newFileId<span class="token operator">+</span><span class="token string">&quot;_&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getStorageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> createTime <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>sunFile<span class="token punctuation">.</span><span class="token function">getCreateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> updateTime <span class="token operator">=</span> <span class="token class-name">DateUtil</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>sunFile<span class="token punctuation">.</span><span class="token function">getUpdateTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> insertSql <span class="token operator">=</span> <span class="token string">&quot;INSERT INTO FILE_INFOR (ID_,FILE_NAME_,EXT_,SIZE_,STORAGE_NAME_,STORAGE_PATH_&quot;</span></span>\n<span class="line">        <span class="token operator">+</span> <span class="token string">&quot;,STORAGE_TYPE_,FOLDER_ID_,VERSION_,IS_PRIVATE_,IN_TRASH_,CREATE_TIME_,CREATOR_ID_&quot;</span></span>\n<span class="line">        <span class="token operator">+</span> <span class="token string">&quot;,UPDATE_TIME_,UPDATE_ID_,REF_STORAGE_NAME_,STATUS_,FULL_TEXT_ENCRYPTION_) &quot;</span></span>\n<span class="line">        <span class="token operator">+</span> <span class="token string">&quot;VALUES (&#39;&quot;</span><span class="token operator">+</span>newFileId<span class="token operator">+</span><span class="token string">&quot;&#39;,&#39;&quot;</span><span class="token operator">+</span>newFileName<span class="token operator">+</span><span class="token string">&quot;&#39;,&#39;&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getExt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;&quot;</span></span>\n<span class="line">        <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getSize</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;,&#39;&quot;</span><span class="token operator">+</span>newStorageName<span class="token operator">+</span><span class="token string">&quot;&#39;,&#39;&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getStoragePath</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;&quot;</span></span>\n<span class="line">        <span class="token operator">+</span> <span class="token string">&quot;,&#39;&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getStorageType</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;,&#39;&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getFolderId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;,&#39;&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;&quot;</span></span>\n<span class="line">        <span class="token operator">+</span> <span class="token string">&quot;,&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getIsPrivate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;,&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getInTrash</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token operator">+</span> <span class="token string">&quot;,to_timestamp(&#39;&quot;</span><span class="token operator">+</span>createTime<span class="token operator">+</span><span class="token string">&quot;&#39;,&#39;yyyy-MM-dd HH24:mi:ss&#39;),&#39;&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getCreatorId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;&quot;</span></span>\n<span class="line">        <span class="token operator">+</span> <span class="token string">&quot;,to_timestamp(&#39;&quot;</span><span class="token operator">+</span>updateTime<span class="token operator">+</span><span class="token string">&quot;&#39;,&#39;yyyy-MM-dd HH24:mi:ss&#39;),&#39;&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getUpdateId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;&quot;</span></span>\n<span class="line">        <span class="token operator">+</span> <span class="token string">&quot;,&#39;&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getRefStorageName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;,&#39;&quot;</span><span class="token operator">+</span>sunFile<span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">&quot;&#39;,0)&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">【文件复制】</span>\n<span class="line"><span class="token comment">//复制模板文件</span></span>\n<span class="line"><span class="token class-name">String</span> fileId <span class="token operator">=</span> params<span class="token punctuation">.</span><span class="token function">getJSONObject</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getString</span><span class="token punctuation">(</span><span class="token string">&quot;id&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">SunFile</span> oldFile <span class="token operator">=</span> officialFileService<span class="token punctuation">.</span><span class="token function">getFileById</span><span class="token punctuation">(</span>fileId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>oldFile<span class="token punctuation">.</span><span class="token function">getSecurityLevel</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    oldFile<span class="token punctuation">.</span><span class="token function">setSecurityLevel</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    officialFileService<span class="token punctuation">.</span><span class="token function">updateFileInfo</span><span class="token punctuation">(</span>oldFile<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token class-name">SunFile</span> newFile <span class="token operator">=</span> officialFileService<span class="token punctuation">.</span><span class="token function">copyFileByFileId</span><span class="token punctuation">(</span>fileId<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">【文件更新】</span>\n<span class="line">sysFile<span class="token punctuation">.</span><span class="token function">setFileBlob</span><span class="token punctuation">(</span>outStream<span class="token punctuation">.</span><span class="token function">toByteArray</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">officialFileService<span class="token punctuation">.</span><span class="token function">updateFileObj</span><span class="token punctuation">(</span>sysFile<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【excel导入】" tabindex="-1"><a class="header-anchor" href="#【excel导入】"><span>【excel导入】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">importMerge</span><span class="token punctuation">(</span><span class="token class-name">MultipartFile</span> multipartFile<span class="token punctuation">,</span> <span class="token class-name">String</span> pk<span class="token punctuation">,</span> <span class="token class-name">String</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">String</span> checkMsg <span class="token operator">=</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// 获取excel数据</span></span>\n<span class="line">        <span class="token class-name">Workbook</span> workbook <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">CommonsMultipartFile</span><span class="token punctuation">)</span> multipartFile<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getFileItem</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.xls&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFWorkbook</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">endsWith</span><span class="token punctuation">(</span><span class="token string">&quot;.xlsx&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span>multipartFile<span class="token punctuation">.</span><span class="token function">getInputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> sheetIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> sheetCount <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getNumberOfSheets</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> sheetIndex <span class="token operator">&lt;</span> sheetCount<span class="token punctuation">;</span> sheetIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token class-name">Sheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">getSheetAt</span><span class="token punctuation">(</span>sheetIndex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> rowIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> rowCount <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getLastRowNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> rowIndex <span class="token operator">&lt;</span> rowCount<span class="token punctuation">;</span> rowIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token class-name">Row</span> row <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">getRow</span><span class="token punctuation">(</span>rowIndex<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> colIndex <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> colCount <span class="token operator">=</span> row<span class="token punctuation">.</span><span class="token function">getLastCellNum</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> colIndex <span class="token operator">&lt;</span> colCount<span class="token punctuation">;</span> colIndex<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                    <span class="token class-name">String</span> cellVal <span class="token operator">=</span> <span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">getCellFormatValue</span><span class="token punctuation">(</span>row<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>colIndex<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>cellVal <span class="token operator">+</span> <span class="token string">&quot; &quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span></span>\n<span class="line">                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        checkMsg <span class="token operator">=</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token keyword">return</span> checkMsg<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【excel导出】" tabindex="-1"><a class="header-anchor" href="#【excel导出】"><span>【excel导出】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">//excel导出xlsx</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">generateTemplate</span><span class="token punctuation">(</span><span class="token class-name">String</span> tableName<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> fieldDataList <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getFieldsInitInfo</span><span class="token punctuation">(</span>tableName<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//字段信息</span></span>\n<span class="line">    <span class="token class-name">String</span> fileName <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>fieldDataList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;TABLEDESC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//文件名</span></span>\n<span class="line">    <span class="token comment">//工作簿对象</span></span>\n<span class="line">    <span class="token class-name">XSSFWorkbook</span> workbook <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XSSFWorkbook</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">XSSFSheet</span> sheet <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createSheet</span><span class="token punctuation">(</span>fileName<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token comment">//表头样式设置</span></span>\n<span class="line">    sheet<span class="token punctuation">.</span><span class="token function">createFreezePane</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//冻结首行</span></span>\n<span class="line">    <span class="token class-name">XSSFCellStyle</span> style <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createCellStyle</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//单元格样式</span></span>\n<span class="line">    style<span class="token punctuation">.</span><span class="token function">setFillForegroundColor</span><span class="token punctuation">(</span><span class="token class-name">HSSFColor</span><span class="token punctuation">.</span><span class="token constant">GREY_25_PERCENT</span><span class="token punctuation">.</span>index<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    style<span class="token punctuation">.</span><span class="token function">setFillPattern</span><span class="token punctuation">(</span><span class="token class-name">HSSFCellStyle</span><span class="token punctuation">.</span><span class="token constant">SOLID_FOREGROUND</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    style<span class="token punctuation">.</span><span class="token function">setBorderLeft</span><span class="token punctuation">(</span><span class="token class-name">HSSFCellStyle</span><span class="token punctuation">.</span><span class="token constant">BORDER_THIN</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">XSSFFont</span> font <span class="token operator">=</span> workbook<span class="token punctuation">.</span><span class="token function">createFont</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//字体样式</span></span>\n<span class="line">    font<span class="token punctuation">.</span><span class="token function">setFontName</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置字体</span></span>\n<span class="line">    font<span class="token punctuation">.</span><span class="token function">setFontHeightInPoints</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">14</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置字号</span></span>\n<span class="line">    font<span class="token punctuation">.</span><span class="token function">setBoldweight</span><span class="token punctuation">(</span><span class="token class-name">HSSFFont</span><span class="token punctuation">.</span><span class="token constant">BOLDWEIGHT_NORMAL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置字体样式，正常显示</span></span>\n<span class="line">    style<span class="token punctuation">.</span><span class="token function">setFont</span><span class="token punctuation">(</span>font<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token comment">//设置excel表头</span></span>\n<span class="line">    <span class="token class-name">XSSFRow</span> dataRow <span class="token operator">=</span> sheet<span class="token punctuation">.</span><span class="token function">createRow</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    dataRow<span class="token punctuation">.</span><span class="token function">setHeight</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">short</span><span class="token punctuation">)</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//行高</span></span>\n<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> size <span class="token operator">=</span> fieldDataList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> size<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        dataRow<span class="token punctuation">.</span><span class="token function">createCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellValue</span><span class="token punctuation">(</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>fieldDataList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;FIELDDESC&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//值</span></span>\n<span class="line">        dataRow<span class="token punctuation">.</span><span class="token function">getCell</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCellStyle</span><span class="token punctuation">(</span>style<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//样式</span></span>\n<span class="line">        sheet<span class="token punctuation">.</span><span class="token function">setColumnWidth</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">6000</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//列宽</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token comment">//下载</span></span>\n<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">ExcelUtil</span><span class="token punctuation">.</span><span class="token function">downloadExcelXlsx</span><span class="token punctuation">(</span>workbook<span class="token punctuation">,</span> fileName<span class="token punctuation">,</span> response<span class="token punctuation">,</span> request<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">IOException</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【excel导出-设置表头样式】" tabindex="-1"><a class="header-anchor" href="#【excel导出-设置表头样式】"><span>【excel导出，设置表头样式】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">// 设置表头样式</span></span>\n<span class="line">excel<span class="token punctuation">.</span><span class="token function">row</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">align</span><span class="token punctuation">(</span><span class="token class-name">Align</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">vAlign</span><span class="token punctuation">(</span><span class="token class-name">VAlign</span><span class="token punctuation">.</span><span class="token constant">CENTER</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">height</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span></span>\n<span class="line">        <span class="token punctuation">.</span><span class="token function">font</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">IFontEditor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token annotation punctuation">@Override</span></span>\n<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">updateFont</span><span class="token punctuation">(</span></span>\n<span class="line">                    <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>cssrc<span class="token punctuation">.</span>ibms<span class="token punctuation">.</span>core<span class="token punctuation">.</span>excel<span class="token punctuation">.</span>style<span class="token punctuation">.</span>font<span class="token punctuation">.</span></span>Font</span> font<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                font<span class="token punctuation">.</span><span class="token function">boldweight</span><span class="token punctuation">(</span><span class="token class-name">BoldWeight</span><span class="token punctuation">.</span><span class="token constant">BOLD</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 粗体</span></span>\n<span class="line">                font<span class="token punctuation">.</span><span class="token function">color</span><span class="token punctuation">(</span><span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 字体颜色</span></span>\n<span class="line">                font<span class="token punctuation">.</span><span class="token function">fontName</span><span class="token punctuation">(</span><span class="token string">&quot;微软雅黑&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">borderFull</span><span class="token punctuation">(</span><span class="token class-name">BorderStyle</span><span class="token punctuation">.</span><span class="token constant">THIN</span><span class="token punctuation">,</span> <span class="token class-name">Color</span><span class="token punctuation">.</span><span class="token constant">BLACK</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span>rowData<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">matches</span><span class="token punctuation">(</span><span class="token string">&quot;[0-9]{4}-[0-9]{2}-[0-9]{2}&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">//4.2日期格式</span></span>\n<span class="line">    excel<span class="token punctuation">.</span><span class="token function">cell</span><span class="token punctuation">(</span><span class="token punctuation">(</span>row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> currentCol<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>rowData<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dataFormat</span><span class="token punctuation">(</span><span class="token string">&quot;yyyy-mm-dd&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token comment">//非日期格式列(依次将数据赋值,跳过第一列空格列)</span></span>\n<span class="line">    excel<span class="token punctuation">.</span><span class="token function">cell</span><span class="token punctuation">(</span><span class="token punctuation">(</span>row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> currentCol<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span>rowData<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>col<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">dataFormat</span><span class="token punctuation">(</span><span class="token string">&quot;@&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// 合并数据</span></span>\n<span class="line">excel<span class="token punctuation">.</span><span class="token function">region</span><span class="token punctuation">(</span>mergeRowStart<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> mergeRowEnd<span class="token punctuation">,</span> mergeColStart <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【excel导出-设置列值域】" tabindex="-1"><a class="header-anchor" href="#【excel导出-设置列值域】"><span>【excel导出，设置列值域】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">//3.特殊字段处理——是否年度科研生产计划，excel设置值域</span></span>\n<span class="line"><span class="token class-name">CellRangeAddressList</span> regions <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">CellRangeAddressList</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1000</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">DVConstraint</span> constraint <span class="token operator">=</span> <span class="token class-name">DVConstraint</span><span class="token punctuation">.</span><span class="token function">createExplicitListConstraint</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span><span class="token string">&quot;是&quot;</span><span class="token punctuation">,</span><span class="token string">&quot;否&quot;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">HSSFDataValidation</span> data_validation <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HSSFDataValidation</span><span class="token punctuation">(</span>regions<span class="token punctuation">,</span> constraint<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">excel<span class="token punctuation">.</span><span class="token function">sheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toHSSFSheet</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">addValidationData</span><span class="token punctuation">(</span>data_validation<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【计划编号重排序】" tabindex="-1"><a class="header-anchor" href="#【计划编号重排序】"><span>【计划编号重排序】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sortDataList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ProjectPlan</span><span class="token punctuation">&gt;</span></span> prjPlanList<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">int</span> listSize <span class="token operator">=</span> prjPlanList<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token comment">//选择排序</span></span>\n<span class="line">    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">;</span>i <span class="token operator">&lt;</span> listSize<span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>listSize<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">            <span class="token class-name">ProjectPlan</span> data01 <span class="token operator">=</span> prjPlanList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            data01<span class="token punctuation">.</span><span class="token function">setShowName</span><span class="token punctuation">(</span>data01<span class="token punctuation">.</span><span class="token function">getWbsbm</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">&quot; &quot;</span> <span class="token operator">+</span> data01<span class="token punctuation">.</span><span class="token function">getRwmc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">String</span> bh01 <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>data01<span class="token punctuation">.</span><span class="token function">getWbsbm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            bh01 <span class="token operator">=</span> <span class="token class-name">StringUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>bh01<span class="token punctuation">)</span><span class="token operator">?</span> bh01<span class="token operator">:</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">ProjectPlan</span> data02 <span class="token operator">=</span> prjPlanList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">String</span> bh02 <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>data02<span class="token punctuation">.</span><span class="token function">getWbsbm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            bh02 <span class="token operator">=</span> <span class="token class-name">StringUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>bh02<span class="token punctuation">)</span><span class="token operator">?</span> bh02<span class="token operator">:</span><span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bhArr01 <span class="token operator">=</span> bh01<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bhArr02 <span class="token operator">=</span> bh02<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;\\\\.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>bhArr01<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                bhArr01 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>bh01<span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>bhArr02<span class="token punctuation">.</span>length <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                bhArr02 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>bh02<span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token keyword">int</span> arrSize01 <span class="token operator">=</span> bhArr01<span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">int</span> arrSize02 <span class="token operator">=</span> bhArr02<span class="token punctuation">.</span>length<span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">int</span> size <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>arrSize01<span class="token operator">&lt;</span>arrSize02<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                size <span class="token operator">=</span> arrSize01<span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">                size <span class="token operator">=</span> arrSize02<span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token keyword">if</span><span class="token punctuation">(</span>bh01<span class="token punctuation">.</span><span class="token function">startsWith</span><span class="token punctuation">(</span>bh02<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                prjPlanList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> data02<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                prjPlanList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> data01<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">continue</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>size<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                <span class="token keyword">int</span> num01 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>bhArr01<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">int</span> num02 <span class="token operator">=</span> <span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>bhArr02<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token keyword">if</span><span class="token punctuation">(</span>num01 <span class="token operator">&gt;</span> num02<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                    prjPlanList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> data02<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                    prjPlanList<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> data01<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">                    <span class="token keyword">break</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>num01 <span class="token operator">==</span> num02<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">                    <span class="token keyword">continue</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">                    <span class="token keyword">break</span><span class="token punctuation">;</span></span>\n<span class="line">                <span class="token punctuation">}</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【得到resource下文件】" tabindex="-1"><a class="header-anchor" href="#【得到resource下文件】"><span>【得到resource下文件】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">InputStream</span> stream<span class="token operator">=</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getResourceAsStream</span><span class="token punctuation">(</span><span class="token string">&quot;/tabConfig.xml&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> xml <span class="token operator">=</span> <span class="token class-name">FileOperator</span><span class="token punctuation">.</span><span class="token function">inputStream2String</span><span class="token punctuation">(</span>stream<span class="token punctuation">,</span> <span class="token string">&quot;utf-8&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">stream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">Document</span> document <span class="token operator">=</span> <span class="token class-name">Dom4jUtil</span><span class="token punctuation">.</span><span class="token function">loadXml</span><span class="token punctuation">(</span>xml<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">Element</span> root <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getRootElement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【声明式事务】" tabindex="-1"><a class="header-anchor" href="#【声明式事务】"><span>【声明式事务】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@Transactional</span><span class="token punctuation">(</span>rollbackFor <span class="token operator">=</span> <span class="token class-name">Exception</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token class-name">TransactionAspectSupport</span><span class="token punctuation">.</span><span class="token function">currentTransactionStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setRollbackOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【编程式事务】" tabindex="-1"><a class="header-anchor" href="#【编程式事务】"><span>【编程式事务】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"># 示例一</span>\n<span class="line"><span class="token annotation punctuation">@Autowired</span></span>\n<span class="line"><span class="token keyword">private</span> <span class="token class-name">PlatformTransactionManager</span> transactionManager<span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token class-name">DefaultTransactionDefinition</span> transDefinition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTransactionDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">transDefinition<span class="token punctuation">.</span><span class="token function">setPropagationBehavior</span><span class="token punctuation">(</span><span class="token class-name">DefaultTransactionDefinition</span><span class="token punctuation">.</span><span class="token constant">PROPAGATION_REQUIRES_NEW</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">TransactionTemplate</span> txTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionTemplate</span><span class="token punctuation">(</span>transactionManager<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">DataSourceTransactionManager</span> transactionManager <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">)</span> txTemplate<span class="token punctuation">.</span><span class="token function">getTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">TransactionStatus</span> transStatus <span class="token operator">=</span> transactionManager<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span>transDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> updateSqls <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">String</span> updateSql <span class="token operator">=</span> <span class="token string">&quot;UPDATE W_KTBTZ SET F_MJ=6 WHERE ID_=&#39;1681922181579751424&#39;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    updateSqls<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    updateSql <span class="token operator">=</span> <span class="token string">&quot;UPDATE W_KTBTZ SET F_MJX=6 WHERE ID_=&#39;1681949062668566528&#39;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    updateSqls<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    jdbcTemplate<span class="token punctuation">.</span><span class="token function">batchUpdate</span><span class="token punctuation">(</span>updateSqls<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>updateSqls<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    transactionManager<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span>transStatus<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">TransactionAspectSupport</span><span class="token punctuation">.</span><span class="token function">currentTransactionStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setRollbackOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span>\n<span class="line"># 示例二</span>\n<span class="line"><span class="token class-name">DefaultTransactionDefinition</span> transDefinition <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTransactionDefinition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">transDefinition<span class="token punctuation">.</span><span class="token function">setPropagationBehavior</span><span class="token punctuation">(</span><span class="token class-name">DefaultTransactionDefinition</span><span class="token punctuation">.</span><span class="token constant">PROPAGATION_REQUIRES_NEW</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">TransactionTemplate</span> txTemplate <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">TransactionTemplate</span><span class="token punctuation">)</span><span class="token class-name">AppUtil</span><span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span><span class="token string">&quot;txTemplate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">DataSourceTransactionManager</span> transactionManager <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">)</span> txTemplate<span class="token punctuation">.</span><span class="token function">getTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">TransactionStatus</span> transStatus <span class="token operator">=</span> transactionManager<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span>transDefinition<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> updateSql <span class="token operator">=</span> <span class="token string">&quot;UPDATE W_XBYYZHTXXB SET F_SFGY=&#39;否&#39;&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">jdbcDao<span class="token punctuation">.</span><span class="token function">exesql</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">updateSql <span class="token operator">=</span> <span class="token string">&quot;UPDATE W_XBYYZHTXXB SET F_SFGY=&#39;是&#39; WHERE F_SSXMID IS NOT NULL AND INSTR(F_SSXMID,&#39;,&#39;)&gt;0&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">jdbcDao<span class="token punctuation">.</span><span class="token function">exesql</span><span class="token punctuation">(</span>updateSql<span class="token punctuation">,</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">transactionManager<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span>transStatus<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">//手动事务回滚</span></span>\n<span class="line"><span class="token class-name">TransactionAspectSupport</span><span class="token punctuation">.</span><span class="token function">currentTransactionStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setRollbackOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">//事务执行结束执行</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">productAutoMatchAsync</span><span class="token punctuation">(</span><span class="token keyword">final</span> <span class="token class-name">String</span> pkStr<span class="token punctuation">,</span><span class="token keyword">final</span> <span class="token class-name">String</span> tableName<span class="token punctuation">,</span><span class="token keyword">final</span> <span class="token class-name">String</span> execType<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">TransactionSynchronizationManager</span><span class="token punctuation">.</span><span class="token function">isSynchronizationActive</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">TransactionSynchronizationManager</span><span class="token punctuation">.</span><span class="token function">registerSynchronization</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">TransactionSynchronizationAdapter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token annotation punctuation">@Override</span></span>\n<span class="line">            <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">afterCommit</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">                <span class="token function">productAutoMatchAsync_Exe</span><span class="token punctuation">(</span>pkStr<span class="token punctuation">,</span>tableName<span class="token punctuation">,</span>execType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span></span>\n<span class="line">        <span class="token function">productAutoMatchAsync_Exe</span><span class="token punctuation">(</span>pkStr<span class="token punctuation">,</span>tableName<span class="token punctuation">,</span>execType<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【跨数据源事务】" tabindex="-1"><a class="header-anchor" href="#【跨数据源事务】"><span>【跨数据源事务】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DataSourceTransactionManager</span> <span class="token function">getTransactionManager</span><span class="token punctuation">(</span><span class="token class-name">String</span> datasourceAlias<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">DataSource</span> dataSource <span class="token operator">=</span> <span class="token class-name">DataSourceUtil</span><span class="token punctuation">.</span><span class="token function">getDataSourceByAlias</span><span class="token punctuation">(</span>datasourceAlias<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">PlatformTransactionManager</span> platformTransactionManager <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">(</span>dataSource<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">TransactionTemplate</span> txTemplate <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TransactionTemplate</span><span class="token punctuation">(</span>platformTransactionManager<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token class-name">DataSourceTransactionManager</span><span class="token punctuation">)</span> txTemplate<span class="token punctuation">.</span><span class="token function">getTransactionManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">DefaultTransactionDefinition</span> <span class="token function">getTransactionDefinitionNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">DefaultTransactionDefinition</span><span class="token punctuation">(</span><span class="token class-name">DefaultTransactionDefinition</span><span class="token punctuation">.</span><span class="token constant">PROPAGATION_REQUIRES_NEW</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">transactionUpdate</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> updateSqls<span class="token punctuation">,</span> <span class="token class-name">String</span> datasourceAlias<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">DataSourceTransactionManager</span> transactionManager <span class="token operator">=</span> <span class="token class-name">MyJdbcUtil</span><span class="token punctuation">.</span><span class="token function">getTransactionManager</span><span class="token punctuation">(</span>datasourceAlias<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">TransactionStatus</span> transStatus <span class="token operator">=</span> transactionManager<span class="token punctuation">.</span><span class="token function">getTransaction</span><span class="token punctuation">(</span><span class="token class-name">MyJdbcUtil</span><span class="token punctuation">.</span><span class="token function">getTransactionDefinitionNew</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token class-name">JdbcTemplate</span> jt <span class="token operator">=</span> <span class="token class-name">DataSourceUtil</span><span class="token punctuation">.</span><span class="token function">getJdbcTempByDsAlias</span><span class="token punctuation">(</span>datasourceAlias<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        jt<span class="token punctuation">.</span><span class="token function">batchUpdate</span><span class="token punctuation">(</span>updateSqls<span class="token punctuation">.</span><span class="token function">toArray</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span>updateSqls<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        transactionManager<span class="token punctuation">.</span><span class="token function">commit</span><span class="token punctuation">(</span>transStatus<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        e<span class="token punctuation">.</span><span class="token function">printStackTrace</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        transStatus<span class="token punctuation">.</span><span class="token function">setRollbackOnly</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【webservic请求】" tabindex="-1"><a class="header-anchor" href="#【webservic请求】"><span>【webservic请求】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * <span class="token keyword">@desc</span> : webservice接口请求</span>\n<span class="line"> * <span class="token keyword">@author</span> : XZM</span>\n<span class="line"> * <span class="token keyword">@createDate</span> : 2021/3/25 9:32</span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">webServiceRequest</span><span class="token punctuation">(</span><span class="token class-name">String</span> addr<span class="token punctuation">,</span> <span class="token class-name">String</span> nameSpaceURL<span class="token punctuation">,</span> <span class="token class-name">String</span> methodName<span class="token punctuation">,</span> <span class="token class-name">String</span> paramPrefix<span class="token punctuation">,</span></span>\n<span class="line">                                <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> paramArr<span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> authParamList<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>axis<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>Service</span> service <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>axis<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span>Service</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">Call</span> call <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">Call</span><span class="token punctuation">)</span> service<span class="token punctuation">.</span><span class="token function">createCall</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">SOAPHeaderElement</span> auth <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SOAPHeaderElement</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QName</span><span class="token punctuation">(</span><span class="token string">&quot;AuthenticationToken&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">CommonTools</span><span class="token punctuation">.</span><span class="token function">isEmptyList</span><span class="token punctuation">(</span>authParamList<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> authParam <span class="token operator">:</span> authParamList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">            <span class="token class-name">String</span> paramName <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>authParam<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;paramName&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">String</span> paramVal <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>authParam<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;paramVal&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            <span class="token class-name">SOAPElement</span> paramEl <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SOAPHeaderElement</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QName</span><span class="token punctuation">(</span>paramName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            paramEl<span class="token punctuation">.</span><span class="token function">addTextNode</span><span class="token punctuation">(</span>paramVal<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">            auth<span class="token punctuation">.</span><span class="token function">addChildElement</span><span class="token punctuation">(</span>paramEl<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    call<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span>auth<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    call<span class="token punctuation">.</span><span class="token function">setTargetEndpointAddress</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>addr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    call<span class="token punctuation">.</span><span class="token function">setOperationName</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">QName</span><span class="token punctuation">(</span>nameSpaceURL<span class="token punctuation">,</span> methodName<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// WSDL里面描述的接口名称</span></span>\n<span class="line">    <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> value <span class="token operator">=</span> paramArr<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> value<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        call<span class="token punctuation">.</span><span class="token function">addParameter</span><span class="token punctuation">(</span>paramPrefix <span class="token operator">+</span> i<span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>axis<span class="token punctuation">.</span>encoding<span class="token punctuation">.</span></span>XMLType</span><span class="token punctuation">.</span><span class="token constant">XSD_STRING</span><span class="token punctuation">,</span> <span class="token class-name"><span class="token namespace">javax<span class="token punctuation">.</span>xml<span class="token punctuation">.</span>rpc<span class="token punctuation">.</span></span>ParameterMode</span><span class="token punctuation">.</span><span class="token constant">IN</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 接口的参数</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    call<span class="token punctuation">.</span><span class="token function">setReturnType</span><span class="token punctuation">(</span><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>axis<span class="token punctuation">.</span>encoding<span class="token punctuation">.</span></span>XMLType</span><span class="token punctuation">.</span><span class="token constant">XSD_STRING</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置返回类型</span></span>\n<span class="line">    <span class="token class-name">String</span> resMsg <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span> call<span class="token punctuation">.</span><span class="token function">invoke</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> resMsg<span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token doc-comment comment">/**</span>\n<span class="line"> * <span class="token keyword">@desc</span> : 总装厂配套协同_各类型流程外发事件</span>\n<span class="line"> * <span class="token keyword">@author</span> : XZM</span>\n<span class="line"> * <span class="token keyword">@createDate</span> : 2021/3/25 8:42</span>\n<span class="line"> * <span class="token keyword">@param</span> : xtsjjsb(协同数据接收表)为主表，其他如jszlnqb(技术资料纳期表)为关联表</span>\n<span class="line"> */</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sentDataOutEvent_Zzcptxt</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params<span class="token punctuation">,</span> <span class="token class-name">String</span> relTableName<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">String</span> relPk <span class="token operator">=</span> <span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;businessKey&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//主键ID</span></span>\n<span class="line">    <span class="token keyword">try</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">//1.组织外发数据</span></span>\n<span class="line">        <span class="token class-name">String</span> data <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getOutSendData</span><span class="token punctuation">(</span>relTableName<span class="token punctuation">,</span> relPk<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token comment">//2.请求接口</span></span>\n<span class="line">        <span class="token class-name">String</span> <span class="token class-name">XTAddr</span> <span class="token operator">=</span> sysParameterService<span class="token punctuation">.</span><span class="token function">getByAlias</span><span class="token punctuation">(</span><span class="token string">&quot;XTAddr&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//http://192.168.8.128:5012/ws/forwardingWebService</span></span>\n<span class="line">        <span class="token class-name">String</span> <span class="token class-name">XTNameSpaceURL</span> <span class="token operator">=</span> sysParameterService<span class="token punctuation">.</span><span class="token function">getByAlias</span><span class="token punctuation">(</span><span class="token string">&quot;XTNameSpaceURL&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//http://webservice.sapphire.brick.com</span></span>\n<span class="line">        <span class="token class-name">String</span> methodName <span class="token operator">=</span> <span class="token string">&quot;sentDataToSynergy&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">String</span> paramPrefix <span class="token operator">=</span> <span class="token string">&quot;in&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> paramArr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">{</span>data<span class="token punctuation">}</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token class-name">String</span> resMsg <span class="token operator">=</span> wScriptImpl<span class="token punctuation">.</span><span class="token function">webServiceRequest</span><span class="token punctuation">(</span><span class="token class-name">XTAddr</span><span class="token punctuation">,</span> <span class="token class-name">XTNameSpaceURL</span><span class="token punctuation">,</span> methodName<span class="token punctuation">,</span> paramPrefix<span class="token punctuation">,</span> paramArr<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">        <span class="token comment">//3.接口返回值处理</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateRelDataSentRes</span><span class="token punctuation">(</span>relTableName<span class="token punctuation">,</span> relPk<span class="token punctuation">,</span> resMsg<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateRelDataSentRes</span><span class="token punctuation">(</span>relTableName<span class="token punctuation">,</span> relPk<span class="token punctuation">,</span> e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2-2-备忘录" tabindex="-1"><a class="header-anchor" href="#_2-2-备忘录"><span>2.2 备忘录</span></a></h3><h4 id="【工厂模式-合同报销】" tabindex="-1"><a class="header-anchor" href="#【工厂模式-合同报销】"><span>【工厂模式，合同报销】</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">/finance/subjectBook/startFlow_clbx</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="【项目下按钮权限】" tabindex="-1"><a class="header-anchor" href="#【项目下按钮权限】"><span>【项目下按钮权限】</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token decorator"><span class="token at operator">@</span><span class="token function">Prop</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">private</span> multiTabParams<span class="token operator">!</span><span class="token operator">:</span> <span class="token builtin">any</span></span>\n<span class="line">multiTabParams<span class="token punctuation">.</span>buttonPermission<span class="token punctuation">[</span><span class="token number">101</span><span class="token punctuation">]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【项目tab下拿参数】" tabindex="-1"><a class="header-anchor" href="#【项目tab下拿参数】"><span>【项目Tab下拿参数】</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line">props<span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line">    formData<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    selfDefinedParams<span class="token operator">:</span> <span class="token punctuation">{</span> type<span class="token operator">:</span> Object<span class="token punctuation">,</span> <span class="token function-variable function">default</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">computed<span class="token operator">:</span> <span class="token punctuation">{</span></span>\n<span class="line"><span class="token function">projectId</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>dataId <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>dataId</span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token function">typeAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>dataType <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span>$route<span class="token punctuation">.</span>params<span class="token punctuation">.</span>typeAlias</span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"><span class="token function">ganttAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">  <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>selfDefinedParams<span class="token punctuation">.</span>ganttAlias <span class="token operator">||</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getGanttAlias</span><span class="token punctuation">(</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【甘特图数据结构】" tabindex="-1"><a class="header-anchor" href="#【甘特图数据结构】"><span>【甘特图数据结构】</span></a></h4><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token operator">/</span>pm<span class="token operator">/</span>projectPlan<span class="token operator">/</span>getInitPrjPlanList<span class="token operator">/</span>$<span class="token punctuation">{</span>prjId<span class="token punctuation">}</span><span class="token operator">?</span>$<span class="token punctuation">{</span>qs<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">type</span>：<span class="token number">0</span><span class="token operator">-</span>“结束到开始”，<span class="token number">1</span><span class="token operator">-</span>“开始到开始”，<span class="token number">2</span><span class="token operator">-</span>“结束到结束”，<span class="token number">3</span><span class="token operator">-</span>“开始到结束”</span>\n<span class="line"><span class="token keyword">return</span> <span class="token punctuation">{</span></span>\n<span class="line">    data<span class="token operator">:</span> <span class="token punctuation">[</span></span>\n<span class="line">      <span class="token punctuation">{</span></span>\n<span class="line">        id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>\n<span class="line">        rwmc<span class="token operator">:</span> <span class="token string">&#39;xxx1&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        jhkssj<span class="token operator">:</span> <span class="token string">&#39;2023-07-07&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        jhjssj<span class="token operator">:</span> <span class="token string">&#39;2023-07-08&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        start_date<span class="token operator">:</span> <span class="token string">&#39;2023-07-07&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        end_date<span class="token operator">:</span> <span class="token string">&#39;2023-07-07&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        parent<span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token punctuation">{</span></span>\n<span class="line">        id<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span></span>\n<span class="line">        rwmc<span class="token operator">:</span> <span class="token string">&#39;xxx2&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        jhkssj<span class="token operator">:</span> <span class="token string">&#39;2023-07-07&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        jhjssj<span class="token operator">:</span> <span class="token string">&#39;2023-07-08&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        start_date<span class="token operator">:</span> <span class="token string">&#39;2023-07-07&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        end_date<span class="token operator">:</span> <span class="token string">&#39;2023-07-07&#39;</span><span class="token punctuation">,</span></span>\n<span class="line">        parent<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span></span>\n<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>\n<span class="line">    links<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> id<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> source<span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span> target<span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span> type<span class="token operator">:</span> <span class="token number">0</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token comment">//实体类中映射属性</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【项目团队功能】" tabindex="-1"><a class="header-anchor" href="#【项目团队功能】"><span>【项目团队功能】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">RecRoleSonController</span><span class="token operator">-</span>initRecRoleSon</span>\n<span class="line"><span class="token class-name">ProjectReleaseController</span><span class="token operator">-</span>initProjectInfo</span>\n<span class="line"><span class="token class-name">RecTopicController</span><span class="token operator">-</span>batchInitRecRoleSon</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【清理项目团队】" tabindex="-1"><a class="header-anchor" href="#【清理项目团队】"><span>【清理项目团队】</span></a></h4><div class="language-sql line-numbers-mode" data-highlighter="prismjs" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> project_rec_project_user <span class="token keyword">WHERE</span> dataid <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> id_ <span class="token keyword">FROM</span> w_sqxmb <span class="token keyword">WHERE</span> f_xmlxkey<span class="token operator">=</span><span class="token string">&#39;sbxm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> project_rec_teamtree <span class="token keyword">WHERE</span> dataid <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> id_ <span class="token keyword">FROM</span> w_sqxmb <span class="token keyword">WHERE</span> f_xmlxkey<span class="token operator">=</span><span class="token string">&#39;sbxm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">DELETE</span> <span class="token keyword">FROM</span> project_rec_roleson_fun <span class="token keyword">WHERE</span> dataid <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token keyword">SELECT</span> id_ <span class="token keyword">FROM</span> w_sqxmb <span class="token keyword">WHERE</span> f_xmlxkey<span class="token operator">=</span><span class="token string">&#39;sbxm&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">COMMIT</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【人员脚本返回值类型】" tabindex="-1"><a class="header-anchor" href="#【人员脚本返回值类型】"><span>【人员脚本返回值类型】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="【mybatis-批量更新】" tabindex="-1"><a class="header-anchor" href="#【mybatis-批量更新】"><span>【mybatis,批量更新】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">void</span> <span class="token function">batchUpdate</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> updateSqls<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token annotation punctuation">@Override</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">batchUpdate</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> updateSqls<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> groupList <span class="token operator">=</span> <span class="token class-name">MyJdbcUtil</span><span class="token punctuation">.</span><span class="token function">getBatchUpdateGroupList</span><span class="token punctuation">(</span>updateSqls<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    groupList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>item<span class="token operator">-&gt;</span><span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">updateByKey</span><span class="token punctuation">(</span><span class="token string">&quot;batchUpdate&quot;</span><span class="token punctuation">,</span>item<span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token operator">&lt;</span>update id<span class="token operator">=</span><span class="token string">&quot;batchUpdate&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;java.util.List&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">    <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;list&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;updateSql&quot;</span> index<span class="token operator">=</span><span class="token string">&quot;index&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;;&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">        $<span class="token punctuation">{</span>updateSql<span class="token punctuation">}</span></span>\n<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>update<span class="token operator">&gt;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【mybatis-foreach】" tabindex="-1"><a class="header-anchor" href="#【mybatis-foreach】"><span>【mybatis,foreach】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">UserMapper</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">void</span> <span class="token function">batchInsertUser</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Param</span><span class="token punctuation">(</span><span class="token string">&quot;list&quot;</span><span class="token punctuation">)</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">&gt;</span></span> userList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 批量插入用户信息 <span class="token operator">--</span><span class="token operator">&gt;</span></span>\n<span class="line"><span class="token operator">&lt;</span>insert id<span class="token operator">=</span><span class="token string">&quot;batchInsertUser&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;java.util.List&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">    insert into <span class="token function">t_user</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span>age<span class="token punctuation">)</span> values</span>\n<span class="line">    <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;list&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;item&quot;</span> index<span class="token operator">=</span><span class="token string">&quot;index&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">        <span class="token punctuation">(</span></span>\n<span class="line">        #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>username<span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>age<span class="token punctuation">}</span></span>\n<span class="line">        <span class="token punctuation">)</span></span>\n<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>insert<span class="token operator">&gt;</span></span>\n<span class="line"></span>\n<span class="line"># 其他参考一</span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">addList</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">RecRoleSonFun</span><span class="token punctuation">&gt;</span></span> addList<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getSqlSessionTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token string">&quot;addRecRoleSonFunList&quot;</span><span class="token punctuation">,</span> addList<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token operator">&lt;</span>insert id<span class="token operator">=</span><span class="token string">&quot;addRecRoleSonFunList&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;java.util.List&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">    <span class="token constant">INSERT</span> <span class="token class-name">INTO</span> <span class="token constant">PROJECT_REC_ROLESON_FUN</span></span>\n<span class="line">    <span class="token punctuation">(</span><span class="token operator">&lt;</span>include refid<span class="token operator">=</span><span class="token string">&quot;columns&quot;</span><span class="token operator">/</span><span class="token operator">&gt;</span><span class="token punctuation">)</span></span>\n<span class="line">    select a<span class="token punctuation">.</span>* <span class="token function">from</span><span class="token punctuation">(</span></span>\n<span class="line">    <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;list&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;item&quot;</span> index<span class="token operator">=</span><span class="token string">&quot;index&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;union all&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">        select</span>\n<span class="line">        #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>roleSonFunid<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>roleSonId<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>funId<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">NUMERIC</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>buttons<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span><span class="token punctuation">,</span></span>\n<span class="line">        #<span class="token punctuation">{</span>item<span class="token punctuation">.</span>dataId<span class="token punctuation">,</span>jdbcType<span class="token operator">=</span><span class="token constant">VARCHAR</span><span class="token punctuation">}</span></span>\n<span class="line">        from dual</span>\n<span class="line">    <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span></span>\n<span class="line">    <span class="token punctuation">)</span>a</span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>insert<span class="token operator">&gt;</span></span>\n<span class="line"></span>\n<span class="line"># 其他参考二</span>\n<span class="line"><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> params <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">String</span> alias <span class="token operator">=</span> <span class="token string">&quot;ndbg,ysbg&quot;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>alias<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;aliasList&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>alias<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtil</span><span class="token punctuation">.</span><span class="token function">isNotEmpty</span><span class="token punctuation">(</span>orgIds<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    params<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">&quot;orgIdList&quot;</span><span class="token punctuation">,</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token class-name">CommonTools<span class="token punctuation">.</span>Obj2String</span><span class="token punctuation">(</span>orgIds<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>userRoleDao<span class="token punctuation">.</span><span class="token function">getUserRoleByRoleAlias</span><span class="token punctuation">(</span>params<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token operator">&lt;</span>select id<span class="token operator">=</span><span class="token string">&quot;getUserRoleByRoleAlias&quot;</span> resultMap<span class="token operator">=</span><span class="token string">&quot;UserRole&quot;</span> parameterType<span class="token operator">=</span><span class="token string">&quot;java.util.Map&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">    select distinct a<span class="token punctuation">.</span>userId<span class="token punctuation">,</span>b<span class="token punctuation">.</span>fullname from <span class="token constant">CWM_SYS_ROLE_USER</span> <span class="token class-name">A</span><span class="token punctuation">,</span><span class="token constant">CWM_SYS_USER</span> <span class="token class-name">B</span></span>\n<span class="line">    where <span class="token class-name">A</span><span class="token punctuation">.</span>userId<span class="token operator">=</span>b<span class="token punctuation">.</span>userId and roleId in <span class="token punctuation">(</span></span>\n<span class="line">        <span class="token constant">SELECT</span> <span class="token constant">ROLEID</span> <span class="token constant">FROM</span> <span class="token constant">CWM_SYS_ROLE</span> <span class="token class-name">WHERE</span> <span class="token number">1</span><span class="token operator">=</span><span class="token number">1</span></span>\n<span class="line">        <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;@Ognl@isNotEmpty(aliasList)&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">            <span class="token constant">AND</span> <span class="token constant">ALIAS</span> <span class="token constant">IN</span></span>\n<span class="line">                <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;aliasList&quot;</span> index<span class="token operator">=</span><span class="token string">&quot;index&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;alias&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span> close<span class="token operator">=</span><span class="token string">&quot;)&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">                    #<span class="token punctuation">{</span>alias<span class="token punctuation">}</span></span>\n<span class="line">                <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span></span>\n<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span></span>\n<span class="line">        <span class="token operator">&lt;</span><span class="token keyword">if</span> test<span class="token operator">=</span><span class="token string">&quot;@Ognl@isNotEmpty(orgIdList)&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">            <span class="token constant">AND</span> <span class="token constant">ORGID</span> <span class="token constant">IN</span></span>\n<span class="line">                <span class="token operator">&lt;</span>foreach collection<span class="token operator">=</span><span class="token string">&quot;orgIdList&quot;</span> index<span class="token operator">=</span><span class="token string">&quot;index&quot;</span> item<span class="token operator">=</span><span class="token string">&quot;orgId&quot;</span> <span class="token keyword">open</span><span class="token operator">=</span><span class="token string">&quot;(&quot;</span> separator<span class="token operator">=</span><span class="token string">&quot;,&quot;</span> close<span class="token operator">=</span><span class="token string">&quot;)&quot;</span><span class="token operator">&gt;</span></span>\n<span class="line">                    #<span class="token punctuation">{</span>orgId<span class="token punctuation">}</span></span>\n<span class="line">                <span class="token operator">&lt;</span><span class="token operator">/</span>foreach<span class="token operator">&gt;</span></span>\n<span class="line">        <span class="token operator">&lt;</span><span class="token operator">/</span><span class="token keyword">if</span><span class="token operator">&gt;</span></span>\n<span class="line">    <span class="token punctuation">)</span></span>\n<span class="line"><span class="token operator">&lt;</span><span class="token operator">/</span>select<span class="token operator">&gt;</span> </span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【多数据源切换】" tabindex="-1"><a class="header-anchor" href="#【多数据源切换】"><span>【多数据源切换】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">【切换数据源一】</span>\n<span class="line"><span class="token class-name">JdbcTemplate</span> assembly <span class="token operator">=</span> <span class="token class-name">DataSourceUtil</span><span class="token punctuation">.</span><span class="token function">getJdbcTempByDsAlias</span><span class="token punctuation">(</span><span class="token string">&quot;ibms-project-708-contract&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//切换数据源，到合同数据库</span></span>\n<span class="line"><span class="token class-name">String</span> sql <span class="token operator">=</span> <span class="token string">&quot;SELECT F_hth,ID_ FROM `w_htjbxxb` WHERE F_htfl = &#39;&quot;</span> <span class="token operator">+</span> htfl <span class="token operator">+</span> <span class="token string">&quot;&#39; AND F_htjd = &#39;登记阶段&#39; AND F_xmid = &#39;&quot;</span> <span class="token operator">+</span> xmid <span class="token operator">+</span> <span class="token string">&quot;&#39;&quot;</span><span class="token punctuation">;</span><span class="token comment">//获取到合同号和id</span></span>\n<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> boData <span class="token operator">=</span> assembly<span class="token punctuation">.</span><span class="token function">queryForList</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//将获取到的数据存入到boData中</span></span>\n<span class="line"><span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Response</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">List</span><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token string">&quot;执行成功！&quot;</span><span class="token punctuation">,</span> boData<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">【切换数据源二】</span>\n<span class="line"><span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">DatabaseSwitchResult</span> result <span class="token operator">=</span> databaseContext<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token class-name">MyConst</span><span class="token punctuation">.</span>financeDataSourceAlias<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line"></span>\n<span class="line"><span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">BaseException</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">【切换数据源三】</span>\n<span class="line"><span class="token annotation punctuation">@Resource</span></span>\n<span class="line"><span class="token keyword">private</span> <span class="token class-name">DatabaseContext</span> databaseContext<span class="token punctuation">;</span></span>\n<span class="line">databaseContext<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token class-name">MyConst</span><span class="token punctuation">.</span>itDataSourceAlias<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//切换数据源为IT运维</span></span>\n<span class="line">databaseContext<span class="token punctuation">.</span><span class="token function">setDataSource</span><span class="token punctuation">(</span><span class="token class-name">MyConst</span><span class="token punctuation">.</span>purchasesDataSourceAlias<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//切换数据源回采购</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【多接口实现类的注入】" tabindex="-1"><a class="header-anchor" href="#【多接口实现类的注入】"><span>【多接口实现类的注入】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token annotation punctuation">@Resource</span><span class="token punctuation">(</span>type<span class="token operator">=</span><span class="token class-name">AutoMatchTask</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token keyword">private</span> <span class="token class-name">IMyTask</span> autoMatchTask<span class="token punctuation">;</span><span class="token comment">//自动配套任务</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【保留小数-四舍五入】" tabindex="-1"><a class="header-anchor" href="#【保留小数-四舍五入】"><span>【保留小数，四舍五入】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token comment">//保留两位小数点</span></span>\n<span class="line"><span class="token comment">//param小数点后保留count位</span></span>\n<span class="line"><span class="token keyword">private</span> <span class="token class-name">String</span> <span class="token function">doubleFixedToString</span><span class="token punctuation">(</span><span class="token keyword">double</span> param<span class="token punctuation">,</span><span class="token keyword">int</span> count<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;%.&quot;</span><span class="token operator">+</span>count<span class="token operator">+</span><span class="token string">&quot;f&quot;</span><span class="token punctuation">,</span> param<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">format1</span><span class="token punctuation">(</span><span class="token keyword">double</span> value<span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">BigDecimal</span> bd <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BigDecimal</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建一个bd对象，将要转换的值value传入构造函数</span></span>\n<span class="line">    bd <span class="token operator">=</span> bd<span class="token punctuation">.</span><span class="token function">setScale</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token class-name">RoundingMode</span><span class="token punctuation">.</span><span class="token constant">HALF_UP</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//调用setScale方法进行数据格式化，保留两位小数，采用四舍五入规则</span></span>\n<span class="line">    <span class="token keyword">return</span> bd<span class="token punctuation">.</span><span class="token function">toPlainString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//返回bd对象的值（转化为string形式）</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">format2</span><span class="token punctuation">(</span><span class="token keyword">double</span> value<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">DecimalFormat</span> df <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">DecimalFormat</span><span class="token punctuation">(</span><span class="token string">&quot;0.00&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//创建一个df对象，传入0.00表示构造一个保留小数点后两位的df对象</span></span>\n<span class="line">    df<span class="token punctuation">.</span><span class="token function">setRoundingMode</span><span class="token punctuation">(</span><span class="token class-name">RoundingMode</span><span class="token punctuation">.</span><span class="token constant">HALF_UP</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//设置规则，这里采用的也是四舍五入规则</span></span>\n<span class="line">    <span class="token keyword">return</span> df<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//返回value（在返回之前使用df对象的格式化方法将数据格式化）</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line">四舍五入</span>\n<span class="line"><span class="token keyword">var</span> num <span class="token operator">=</span><span class="token number">2.446242342</span><span class="token punctuation">;</span></span>\n<span class="line">num <span class="token operator">=</span> num<span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 输出结果为 2.45</span></span>\n<span class="line">不四舍五入</span>\n<span class="line"><span class="token class-name">Math</span><span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span><span class="token number">15.7784514000</span> <span class="token operator">*</span> <span class="token number">100</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">100</span>   <span class="token comment">//输出结果为 15.77</span></span>\n<span class="line"><span class="token class-name">Number</span><span class="token punctuation">(</span><span class="token number">15.7784514000</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token operator">/</span><span class="token operator">^</span>\\d<span class="token operator">+</span><span class="token punctuation">(</span><span class="token operator">?</span><span class="token operator">:</span>\\<span class="token punctuation">.</span>\\d<span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token operator">?</span><span class="token operator">/</span><span class="token punctuation">)</span><span class="token punctuation">)</span>   <span class="token comment">//输出结果为 15.77,不能用于整数如 10 必须写为10.0000</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【lambda中文排序】" tabindex="-1"><a class="header-anchor" href="#【lambda中文排序】"><span>【Lambda中文排序】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">&gt;</span></span> list <span class="token operator">=</span> <span class="token class-name">Arrays</span><span class="token punctuation">.</span><span class="token function">asList</span><span class="token punctuation">(</span><span class="token string">&quot;谷歌&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;腾讯&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;百度&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;淘宝&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>\n<span class="line"><span class="token class-name">Collator</span> collator <span class="token operator">=</span> <span class="token class-name">Collator</span><span class="token punctuation">.</span><span class="token function">getInstance</span><span class="token punctuation">(</span><span class="token class-name">Locale</span><span class="token punctuation">.</span><span class="token constant">CHINA</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>\n<span class="line">list<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">(</span>string1<span class="token punctuation">,</span> string2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> collator<span class="token punctuation">.</span><span class="token function">compare</span><span class="token punctuation">(</span>string1<span class="token punctuation">,</span> string2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    </span>\n<span class="line"><span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【byte-、file、inputstream互相转换】" tabindex="-1"><a class="header-anchor" href="#【byte-、file、inputstream互相转换】"><span>【byte[]、File、InputStream互相转换】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token number">1</span>、将<span class="token class-name">File</span>、<span class="token class-name">FileInputStream</span> 转换为<span class="token keyword">byte</span>数组：</span>\n<span class="line"><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;test.txt&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">InputStream</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileInputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span>input<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line">input<span class="token punctuation">.</span><span class="token function">read</span><span class="token punctuation">(</span>byt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token number">2</span>、将<span class="token keyword">byte</span>数组转换为<span class="token class-name">InputStream</span>：</span>\n<span class="line"><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> byt <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">1024</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">InputStream</span> input <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ByteArrayInputStream</span><span class="token punctuation">(</span>byt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token number">3</span>、将<span class="token keyword">byte</span>数组转换为<span class="token class-name">File</span>：</span>\n<span class="line"><span class="token class-name">File</span> file <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">File</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">OutputStream</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileOutputStream</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">BufferedOutputStream</span> bufferedOutput <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedOutputStream</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">bufferedOutput<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>byt<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【json转换-特殊字符处理】" tabindex="-1"><a class="header-anchor" href="#【json转换-特殊字符处理】"><span>【json转换，特殊字符处理】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">JsonConfig</span> jsonConfig <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JsonConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">//将所有数据库中含有的特殊字段进行处理，防止到前台无法解析正确json</span></span>\n<span class="line">jsonConfig<span class="token punctuation">.</span><span class="token function">registerJsonValueProcessor</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">JsonValueProcessor</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token annotation punctuation">@Override</span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">processObjectValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> arg0<span class="token punctuation">,</span> <span class="token class-name">Object</span> arg1<span class="token punctuation">,</span> <span class="token class-name">JsonConfig</span> arg2<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// TODO Auto-generated method stub</span></span>\n<span class="line">         <span class="token keyword">if</span> <span class="token punctuation">(</span>arg1 <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">             <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">         <span class="token punctuation">}</span></span>\n<span class="line">         <span class="token class-name">String</span> ret <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">         ret<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">)</span>arg1<span class="token punctuation">)</span><span class="token punctuation">.</span></span>\n<span class="line">                 <span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;，&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span></span>\n<span class="line">                 <span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;;&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;；&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span></span>\n<span class="line">                 <span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot; &quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span></span>\n<span class="line">                 <span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;\\n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span></span>\n<span class="line">                 <span class="token function">replace</span><span class="token punctuation">(</span><span class="token string">&quot;:&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;：&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">         <span class="token keyword">return</span> ret<span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line">    <span class="token annotation punctuation">@Override</span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">processArrayValue</span><span class="token punctuation">(</span><span class="token class-name">Object</span> arg0<span class="token punctuation">,</span> <span class="token class-name">JsonConfig</span> arg1<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token comment">// TODO Auto-generated method stub</span></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">JSONObject</span> buttonPermissionStr <span class="token operator">=</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">fromObject</span><span class="token punctuation">(</span>buttonPermission<span class="token punctuation">,</span> jsonConfig<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【file转multipartfile】" tabindex="-1"><a class="header-anchor" href="#【file转multipartfile】"><span>【File转MultipartFile】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">import</span> <span class="token import"><span class="token namespace">com<span class="token punctuation">.</span>ibms<span class="token punctuation">.</span>common<span class="token punctuation">.</span>util<span class="token punctuation">.</span>file<span class="token punctuation">.</span></span><span class="token class-name">FileUtil</span></span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">FileUtil</span><span class="token punctuation">.</span><span class="token function">fileToMultipartFile</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【mybatis调试sql】" tabindex="-1"><a class="header-anchor" href="#【mybatis调试sql】"><span>【Mybatis调试SQL】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"># 按shift <span class="token operator">+</span> shift 双击 进行全局搜索</span>\n<span class="line"><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>executor<span class="token punctuation">.</span></span>SimpleExecutor</span> 找到这个类</span>\n<span class="line"><span class="token class-name"><span class="token namespace">org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>ibatis<span class="token punctuation">.</span>executor<span class="token punctuation">.</span></span>SimpleExecutor</span>#doQuery 定位到这个方法</span>\n<span class="line"># 断点打到 var9 <span class="token operator">=</span> handler<span class="token punctuation">.</span><span class="token function">query</span><span class="token punctuation">(</span>stmt<span class="token punctuation">,</span> resultHandler<span class="token punctuation">)</span><span class="token punctuation">;</span>这个地方，查看stmt（stmt <span class="token keyword">instanceof</span> <span class="token class-name">Statement</span>），</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【groovy脚本执行】" tabindex="-1"><a class="header-anchor" href="#【groovy脚本执行】"><span>【groovy脚本执行】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token number">666</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token class-name">GroovyBinding</span> binding <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GroovyBinding</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    binding<span class="token punctuation">.</span><span class="token function">setProperty</span><span class="token punctuation">(</span><span class="token string">&quot;wscriptImpl&quot;</span><span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">WScriptImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">GroovyShell</span> shell <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GroovyShell</span><span class="token punctuation">(</span>binding<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">String</span> script <span class="token operator">=</span> <span class="token string">&quot;wscriptImpl.test()&quot;</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">Object</span> rtn <span class="token operator">=</span> shell<span class="token punctuation">.</span><span class="token function">evaluate</span><span class="token punctuation">(</span>script<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>rtn<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    binding<span class="token punctuation">.</span><span class="token function">clearVariables</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【远程调试参数】" tabindex="-1"><a class="header-anchor" href="#【远程调试参数】"><span>【远程调试参数】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"># 采购</span>\n<span class="line"><span class="token operator">-</span><span class="token class-name">Dfile</span><span class="token punctuation">.</span>encoding<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span>agentlib<span class="token operator">:</span>jdwp<span class="token operator">=</span>transport<span class="token operator">=</span>dt_socket<span class="token punctuation">,</span>server<span class="token operator">=</span>y<span class="token punctuation">,</span>suspend<span class="token operator">=</span>n<span class="token punctuation">,</span>address<span class="token operator">=</span><span class="token number">30713</span> <span class="token operator">-</span>jar <span class="token operator">%</span><span class="token constant">JAVA_OPTS</span><span class="token operator">%</span> <span class="token operator">%</span><span class="token constant">BASE</span><span class="token operator">%</span>\\lib\\ibms<span class="token operator">-</span><span class="token number">712</span>S<span class="token operator">-</span>purchases<span class="token punctuation">.</span>jar <span class="token operator">%</span><span class="token constant">SPRING_OPTS</span><span class="token operator">%</span></span>\n<span class="line"><span class="token operator">-</span><span class="token class-name">Dfile</span><span class="token punctuation">.</span>encoding<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span>jar <span class="token operator">%</span><span class="token constant">JAVA_OPTS</span><span class="token operator">%</span> <span class="token operator">%</span><span class="token constant">BASE</span><span class="token operator">%</span>\\lib\\ibms<span class="token operator">-</span><span class="token number">712</span>S<span class="token operator">-</span>purchases<span class="token punctuation">.</span>jar <span class="token operator">%</span><span class="token constant">SPRING_OPTS</span><span class="token operator">%</span></span>\n<span class="line"># 平台</span>\n<span class="line"><span class="token operator">-</span><span class="token class-name">Xdebug</span> <span class="token operator">-</span><span class="token class-name">Xnoagent</span> <span class="token operator">-</span><span class="token class-name">Djava</span><span class="token punctuation">.</span>compiler<span class="token operator">=</span><span class="token constant">NONE</span> <span class="token operator">-</span><span class="token class-name">Xrunjdwp</span><span class="token operator">:</span>transport<span class="token operator">=</span>dt_socket<span class="token punctuation">,</span>address<span class="token operator">=</span><span class="token number">20750</span><span class="token punctuation">,</span>server<span class="token operator">=</span>y<span class="token punctuation">,</span>suspend<span class="token operator">=</span>n <span class="token operator">-</span><span class="token class-name">Dfile</span><span class="token punctuation">.</span>encoding<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span>jar <span class="token operator">%</span><span class="token constant">JAVA_OPTS</span><span class="token operator">%</span> <span class="token operator">%</span><span class="token constant">BASE</span><span class="token operator">%</span>\\lib\\ibms<span class="token operator">-</span><span class="token number">712</span>S<span class="token operator">-</span>assembly<span class="token punctuation">.</span>jar <span class="token operator">%</span><span class="token constant">SPRING_OPTS</span><span class="token operator">%</span></span>\n<span class="line"><span class="token operator">-</span><span class="token class-name">Dfile</span><span class="token punctuation">.</span>encoding<span class="token operator">=</span>utf<span class="token operator">-</span><span class="token number">8</span> <span class="token operator">-</span>jar <span class="token operator">%</span><span class="token constant">JAVA_OPTS</span><span class="token operator">%</span> <span class="token operator">%</span><span class="token constant">BASE</span><span class="token operator">%</span>\\lib\\ibms<span class="token operator">-</span><span class="token number">712</span>S<span class="token operator">-</span>assembly<span class="token punctuation">.</span>jar <span class="token operator">%</span><span class="token constant">SPRING_OPTS</span><span class="token operator">%</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【nacos启动】" tabindex="-1"><a class="header-anchor" href="#【nacos启动】"><span>【nacos启动】</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">startup.cmd <span class="token parameter variable">-m</span> standalone</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="【redis清理】" tabindex="-1"><a class="header-anchor" href="#【redis清理】"><span>【redis清理】</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">redis-cli.exe</span>\n<span class="line">flushall</span>\n<span class="line">keys *</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【端口结束占用】" tabindex="-1"><a class="header-anchor" href="#【端口结束占用】"><span>【端口结束占用】</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">输入netstat -ano<span class="token operator">|</span>findstr <span class="token number">8080</span> 查看占用8080端口的进程</span>\n<span class="line">tasklist<span class="token operator">|</span>findstr <span class="token string">&quot;2720&quot;</span></span>\n<span class="line">输入taskkill /f /pid  进程ID</span>\n<span class="line"></span>\n<span class="line"><span class="token function">service</span> gitblit start</span>\n<span class="line"><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> gitblit</span>\n<span class="line"><span class="token function">netstat</span> -lnp<span class="token operator">|</span><span class="token function">grep</span> <span class="token number">7130</span></span>\n<span class="line"><span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token variable">$pid</span></span>\n<span class="line"></span>\n<span class="line">根据端口查看pid</span>\n<span class="line"><span class="token function">lsof</span> <span class="token parameter variable">-i</span> :8080</span>\n<span class="line">根据pid 查端口</span>\n<span class="line"><span class="token function">netstat</span> <span class="token parameter variable">-anp</span> <span class="token operator">|</span><span class="token function">grep</span>  pid</span>\n<span class="line">根据 pid 查看进程是什么服务</span>\n<span class="line"><span class="token function">ps</span> <span class="token parameter variable">-ef</span> <span class="token operator">|</span> <span class="token function">grep</span> <span class="token number">4299</span>（pid ）</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【tomcat中文乱码】" tabindex="-1"><a class="header-anchor" href="#【tomcat中文乱码】"><span>【tomcat中文乱码】</span></a></h4><div class="language-text line-numbers-mode" data-highlighter="prismjs" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">原因：</span>\n<span class="line">    idea工具jvm配置了-Dfile.encoding=UTF-8，设置文件编码格式为UTF-8，而tomcat没有配置文件编码格式为UTF-8</span>\n<span class="line">解决方案：</span>\n<span class="line">    在tomcat8以下 的catalina.bat文件中</span>\n<span class="line">    set JAVA_OPTS=%JAVA_OPTS% %LOGGING_CONFIG%的后面加上 -Dfile.encoding=&quot;UTF-8&quot;</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【hashmap】" tabindex="-1"><a class="header-anchor" href="#【hashmap】"><span>【HashMap】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">BpmDefinition</span><span class="token punctuation">&gt;</span></span> resultDefinition <span class="token operator">=</span> resultMap<span class="token punctuation">.</span><span class="token function">computeIfAbsent</span><span class="token punctuation">(</span>clientNum<span class="token punctuation">,</span> <span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token keyword">return</span> <span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">synchronizedList</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">LinkedList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">resultDefinition<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>definition<span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="【集合排序】" tabindex="-1"><a class="header-anchor" href="#【集合排序】"><span>【集合排序】</span></a></h4><div class="language-java line-numbers-mode" data-highlighter="prismjs" data-ext="java" data-title="java"><pre class="language-java"><code><span class="line">【排序一】</span>\n<span class="line">nodeItem<span class="token punctuation">.</span><span class="token function">getBpmIdentities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span>item <span class="token operator">-&gt;</span> userIndexMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">【排序二】</span>\n<span class="line"><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> dataList <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">)</span> params<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;selected&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>dataList<span class="token punctuation">,</span> <span class="token keyword">new</span> <span class="token class-name">Comparator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Map</span><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">    <span class="token annotation punctuation">@Override</span></span>\n<span class="line">    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">compare</span><span class="token punctuation">(</span><span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> o1<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">&gt;</span></span> o2<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>\n<span class="line">        <span class="token keyword">return</span> <span class="token class-name">CommonTools</span><span class="token punctuation">.</span><span class="token function">obj2Int</span><span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;rownum_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token class-name">CommonTools</span><span class="token punctuation">.</span><span class="token function">obj2Int</span><span class="token punctuation">(</span>o2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;rownum_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">    <span class="token punctuation">}</span></span>\n<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">【排序三】</span>\n<span class="line"><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>dataList<span class="token punctuation">,</span> <span class="token punctuation">(</span>o1<span class="token punctuation">,</span> o2<span class="token punctuation">)</span> <span class="token operator">-&gt;</span> <span class="token class-name">CommonTools</span><span class="token punctuation">.</span><span class="token function">obj2Int</span><span class="token punctuation">(</span>o1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;rownum_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token class-name">CommonTools</span><span class="token punctuation">.</span><span class="token function">obj2Int</span><span class="token punctuation">(</span>o2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;rownum_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line">【排序四】</span>\n<span class="line"><span class="token class-name">Collections</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span>dataList<span class="token punctuation">,</span> <span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparingInt</span><span class="token punctuation">(</span>o <span class="token operator">-&gt;</span> <span class="token class-name">CommonTools</span><span class="token punctuation">.</span><span class="token function">obj2Int</span><span class="token punctuation">(</span>o<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&quot;rownum_&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>',257)],e={},o=(0,a(262).A)(e,[["render",function(n,s){return(0,p.uX)(),(0,p.CE)("div",null,t)}]]),c=JSON.parse('{"path":"/%E5%89%8D%E5%90%8E%E7%AB%AF%E4%BB%A3%E7%A0%81%E6%AE%B5.html","title":"前后端代码段","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"1 前端","slug":"_1-前端","link":"#_1-前端","children":[{"level":3,"title":"1.1 表单定制相关","slug":"_1-1-表单定制相关","link":"#_1-1-表单定制相关","children":[]},{"level":3,"title":"1.2 列表定制相关","slug":"_1-2-列表定制相关","link":"#_1-2-列表定制相关","children":[]},{"level":3,"title":"1.3 流程设计相关","slug":"_1-3-流程设计相关","link":"#_1-3-流程设计相关","children":[]},{"level":3,"title":"1.4 Vue/Html页面定制","slug":"_1-4-vue-html页面定制","link":"#_1-4-vue-html页面定制","children":[]},{"level":3,"title":"1.5 前端工具类","slug":"_1-5-前端工具类","link":"#_1-5-前端工具类","children":[]},{"level":3,"title":"1.6 备忘录","slug":"_1-6-备忘录","link":"#_1-6-备忘录","children":[]}]},{"level":2,"title":"2 后端","slug":"_2-后端","link":"#_2-后端","children":[{"level":3,"title":"2.1 功能框架","slug":"_2-1-功能框架","link":"#_2-1-功能框架","children":[]},{"level":3,"title":"2.2 备忘录","slug":"_2-2-备忘录","link":"#_2-2-备忘录","children":[]}]}],"git":{},"filePathRelative":"前后端代码段.md"}')}}]);